//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Threading.Tasks;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirement_PolicyRequirementArea", "PolicyRequirementArea", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementArea), "PolicyRequirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirement), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirement_PolicyRequirementChapter", "PolicyRequirementChapter", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementChapter), "PolicyRequirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirement), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirement_PolicyRequirementLevel", "PolicyRequirementLevel", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementLevel), "PolicyRequirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirement), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirement_PolicyRequirementSubject", "PolicyRequirementSubject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementSubject), "PolicyRequirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirement), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementAssignedAttachment_PolicyRequirementAttachment", "PolicyRequirementAttachment", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementAttachment), "PolicyRequirementAssignedAttachment", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementAssignedAttachment), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementAssignedHardness_PolicyRequirementHardness", "PolicyRequirementHardness", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementHardness), "PolicyRequirementAssignedHardness", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementAssignedHardness), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementAssignedSource_PolicyRequirementSource", "PolicyRequirementSource", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementSource), "PolicyRequirementAssignedSource", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementAssignedSource), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementLevelProperties_PolicyRequirementLevel", "PolicyRequirementLevel", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementLevel), "PolicyRequirementLevelProperty", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementLevelProperty), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementPublishingAdditionalInfo_PolicyRequirementPublishingAdditionalInfoAction1", "PolicyRequirementPublishingAdditionalInfoAction", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementPublishingAdditionalInfoAction), "PolicyRequirementPublishingAdditionalInfo", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementPublishingAdditionalInfo), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementAssignedHardnessQueue_PolicyRequirementHardness", "PolicyRequirementHardness", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementHardness), "PolicyRequirementAssignedHardnessQueue", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementAssignedHardnessQueue), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementModificationQueuePolicyRequirement", "PolicyRequirementModificationQueue", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementModificationQueue), "PolicyRequirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirement), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementModificationAssignmentQueuePolicyRequirementAssigmentQueueType", "PolicyRequirementModificationAssignmentQueue", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueue), "PolicyRequirementAssigmentQueueType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementAssigmentQueueType), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementModificationAssignmentQueuePolicyRequirementModificationQueue", "PolicyRequirementModificationAssignmentQueue", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueue), "PolicyRequirementModificationQueue", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementModificationQueue), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementPolicyRequirementAssignedSource", "PolicyRequirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirement), "PolicyRequirementAssignedSource", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementAssignedSource), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementAssignedAttachmentPolicyRequirement", "PolicyRequirementAssignedAttachment", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementAssignedAttachment), "PolicyRequirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirement), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementAssignedHardnessPolicyRequirement", "PolicyRequirementAssignedHardness", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementAssignedHardness), "PolicyRequirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirement), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyChangeRequests_PolicyChangeRequestAction", "PolicyRequirementChangeRequestAction", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementChangeRequestAction), "PolicyRequirementChangeRequest", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementChangeRequest), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyChangeRequests_PolicyChangeRequestStatus", "PolicyRequirementChangeRequestStatu", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementChangeRequestStatu), "PolicyRequirementChangeRequest", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementChangeRequest), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementLocationPolicyRequirement", "PolicyRequirementLocation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementLocation), "PolicyRequirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirement), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementLocalAuthorityPolicyRequirement", "PolicyRequirementLocalAuthority", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementLocalAuthority), "PolicyRequirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirement), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementPolicyRequirementChildSubject", "PolicyRequirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirement), "PolicyRequirementChildSubject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirementChildSubject), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "PublicSpaceManagementThemeReferencePublicSpaceManagementTheme", "PublicSpaceManagementThemeReference", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReference), "PublicSpaceManagementTheme", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PublicSpaceManagementTheme), true)]
[assembly: EdmRelationshipAttribute("PolicyRequirements.DataEntityModels", "PublicSpaceManagementThemeReferencePolicyRequirement", "PublicSpaceManagementThemeReference", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DALI.PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReference), "PolicyRequirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DALI.PolicyRequirements.DataEntityModels.PolicyRequirement), true)]

#endregion

namespace DALI.PolicyRequirements.DataEntityModels
{
    #region Contexts

    public partial interface IPolicyRequirementDataEntityModelContext
    {
        ObjectSet<PolicyRequirement> PolicyRequirements { get; }
        ObjectSet<PolicyRequirementArea> PolicyRequirementAreas { get; }
        ObjectSet<PolicyRequirementAssignedAttachment> PolicyRequirementAssignedAttachments { get; }
        ObjectSet<PolicyRequirementAssignedHardness> PolicyRequirementAssignedHardnesses { get; }
        ObjectSet<PolicyRequirementAssignedSource> PolicyRequirementAssignedSources { get; }
        ObjectSet<PolicyRequirementAttachment> PolicyRequirementAttachments { get; }
        ObjectSet<PolicyRequirementChapter> PolicyRequirementChapters { get; }
        ObjectSet<PolicyRequirementHardness> PolicyRequirementHardnesses { get; }
        ObjectSet<PolicyRequirementKeyword> PolicyRequirementKeywords { get; }
        ObjectSet<PolicyRequirementLevel> PolicyRequirementLevels { get; }
        ObjectSet<PolicyRequirementLevelProperty> PolicyRequirementLevelProperties { get; }
        ObjectSet<PolicyRequirementPublishingAdditionalInfo> PolicyRequirementPublishingAdditionalInfoes { get; }
        ObjectSet<PolicyRequirementPublishingAdditionalInfoAction> PolicyRequirementPublishingAdditionalInfoActions { get; }
        ObjectSet<PolicyRequirementPublishingControl> PolicyRequirementPublishingControls { get; }
        ObjectSet<PolicyRequirementPublishQueue> PolicyRequirementPublishQueues { get; }
        ObjectSet<PolicyRequirementSource> PolicyRequirementSources { get; }
        ObjectSet<PolicyRequirementSubject> PolicyRequirementSubjects { get; }
        ObjectSet<TT_SYS_GENID> TT_SYS_GENID { get; }
        ObjectSet<PolicyRequirementAssigmentQueueType> PolicyRequirementAssigmentQueueTypes { get; }
        ObjectSet<PolicyRequirementAssignedHardnessQueue> PolicyRequirementAssignedHardnessQueues { get; }
        ObjectSet<PolicyRequirementModificationQueue> PolicyRequirementModificationQueues { get; }
        ObjectSet<PolicyRequirementModificationAssignmentQueue> PolicyRequirementModificationAssignmentQueues { get; }
        ObjectSet<PolicyRequirementChangeRequestAction> PolicyRequirementChangeRequestActions { get; }
        ObjectSet<PolicyRequirementChangeRequestStatu> PolicyRequirementChangeRequestStatus { get; }
        ObjectSet<PolicyRequirementChangeRequest> PolicyRequirementChangeRequests { get; }
        ObjectSet<Bookmark> Bookmarks { get; }
        ObjectSet<APP_SETTINGS> APP_SETTINGS { get; }
        ObjectSet<PolicyRequirementLocalAuthority> PolicyRequirementLocalAuthorities { get; }
        ObjectSet<PolicyRequirementLocation> PolicyRequirementLocations { get; }
        ObjectSet<PolicyRequirementChildSubject> PolicyRequirementChildSubjects { get; }
        ObjectSet<PublicSpaceManagementTheme> PublicSpaceManagementThemes { get; }
        ObjectSet<PublicSpaceManagementThemeReference> PublicSpaceManagementThemeReferences { get; }
        int SaveChanges(SaveOptions options);
        int SaveChanges();
        Task<int> SaveChangesAsync(SaveOptions options);
        Task<int> SaveChangesAsync();
        void Refresh(RefreshMode refreshMode, object entity);
        ObjectStateManager ObjectStateManager { get; }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PolicyRequirementDataEntityModels : ObjectContext, IPolicyRequirementDataEntityModelContext
    {
        #region Constructors

        /// <summary>
        /// Initializes a new PolicyRequirementDataEntityModels object using the connection string found in the 'PolicyRequirementDataEntityModels' section of the application configuration file.
        /// </summary>
        public PolicyRequirementDataEntityModels() : base("name=PolicyRequirementDataEntityModels", "PolicyRequirementDataEntityModels")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new PolicyRequirementDataEntityModels object.
        /// </summary>
        public PolicyRequirementDataEntityModels(string connectionString) : base(connectionString, "PolicyRequirementDataEntityModels")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new PolicyRequirementDataEntityModels object.
        /// </summary>
        public PolicyRequirementDataEntityModels(EntityConnection connection) : base(connection, "PolicyRequirementDataEntityModels")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirement> PolicyRequirements
        {
            get
            {
                if ((_PolicyRequirements == null))
                {
                    _PolicyRequirements = base.CreateObjectSet<PolicyRequirement>("PolicyRequirements");
                }
                return _PolicyRequirements;
            }
        }
        private ObjectSet<PolicyRequirement> _PolicyRequirements;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementArea> PolicyRequirementAreas
        {
            get
            {
                if ((_PolicyRequirementAreas == null))
                {
                    _PolicyRequirementAreas = base.CreateObjectSet<PolicyRequirementArea>("PolicyRequirementAreas");
                }
                return _PolicyRequirementAreas;
            }
        }
        private ObjectSet<PolicyRequirementArea> _PolicyRequirementAreas;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementAssignedAttachment> PolicyRequirementAssignedAttachments
        {
            get
            {
                if ((_PolicyRequirementAssignedAttachments == null))
                {
                    _PolicyRequirementAssignedAttachments = base.CreateObjectSet<PolicyRequirementAssignedAttachment>("PolicyRequirementAssignedAttachments");
                }
                return _PolicyRequirementAssignedAttachments;
            }
        }
        private ObjectSet<PolicyRequirementAssignedAttachment> _PolicyRequirementAssignedAttachments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementAssignedHardness> PolicyRequirementAssignedHardnesses
        {
            get
            {
                if ((_PolicyRequirementAssignedHardnesses == null))
                {
                    _PolicyRequirementAssignedHardnesses = base.CreateObjectSet<PolicyRequirementAssignedHardness>("PolicyRequirementAssignedHardnesses");
                }
                return _PolicyRequirementAssignedHardnesses;
            }
        }
        private ObjectSet<PolicyRequirementAssignedHardness> _PolicyRequirementAssignedHardnesses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementAssignedSource> PolicyRequirementAssignedSources
        {
            get
            {
                if ((_PolicyRequirementAssignedSources == null))
                {
                    _PolicyRequirementAssignedSources = base.CreateObjectSet<PolicyRequirementAssignedSource>("PolicyRequirementAssignedSources");
                }
                return _PolicyRequirementAssignedSources;
            }
        }
        private ObjectSet<PolicyRequirementAssignedSource> _PolicyRequirementAssignedSources;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementAttachment> PolicyRequirementAttachments
        {
            get
            {
                if ((_PolicyRequirementAttachments == null))
                {
                    _PolicyRequirementAttachments = base.CreateObjectSet<PolicyRequirementAttachment>("PolicyRequirementAttachments");
                }
                return _PolicyRequirementAttachments;
            }
        }
        private ObjectSet<PolicyRequirementAttachment> _PolicyRequirementAttachments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementChapter> PolicyRequirementChapters
        {
            get
            {
                if ((_PolicyRequirementChapters == null))
                {
                    _PolicyRequirementChapters = base.CreateObjectSet<PolicyRequirementChapter>("PolicyRequirementChapters");
                }
                return _PolicyRequirementChapters;
            }
        }
        private ObjectSet<PolicyRequirementChapter> _PolicyRequirementChapters;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementHardness> PolicyRequirementHardnesses
        {
            get
            {
                if ((_PolicyRequirementHardnesses == null))
                {
                    _PolicyRequirementHardnesses = base.CreateObjectSet<PolicyRequirementHardness>("PolicyRequirementHardnesses");
                }
                return _PolicyRequirementHardnesses;
            }
        }
        private ObjectSet<PolicyRequirementHardness> _PolicyRequirementHardnesses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementKeyword> PolicyRequirementKeywords
        {
            get
            {
                if ((_PolicyRequirementKeywords == null))
                {
                    _PolicyRequirementKeywords = base.CreateObjectSet<PolicyRequirementKeyword>("PolicyRequirementKeywords");
                }
                return _PolicyRequirementKeywords;
            }
        }
        private ObjectSet<PolicyRequirementKeyword> _PolicyRequirementKeywords;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementLevel> PolicyRequirementLevels
        {
            get
            {
                if ((_PolicyRequirementLevels == null))
                {
                    _PolicyRequirementLevels = base.CreateObjectSet<PolicyRequirementLevel>("PolicyRequirementLevels");
                }
                return _PolicyRequirementLevels;
            }
        }
        private ObjectSet<PolicyRequirementLevel> _PolicyRequirementLevels;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementLevelProperty> PolicyRequirementLevelProperties
        {
            get
            {
                if ((_PolicyRequirementLevelProperties == null))
                {
                    _PolicyRequirementLevelProperties = base.CreateObjectSet<PolicyRequirementLevelProperty>("PolicyRequirementLevelProperties");
                }
                return _PolicyRequirementLevelProperties;
            }
        }
        private ObjectSet<PolicyRequirementLevelProperty> _PolicyRequirementLevelProperties;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementPublishingAdditionalInfo> PolicyRequirementPublishingAdditionalInfoes
        {
            get
            {
                if ((_PolicyRequirementPublishingAdditionalInfoes == null))
                {
                    _PolicyRequirementPublishingAdditionalInfoes = base.CreateObjectSet<PolicyRequirementPublishingAdditionalInfo>("PolicyRequirementPublishingAdditionalInfoes");
                }
                return _PolicyRequirementPublishingAdditionalInfoes;
            }
        }
        private ObjectSet<PolicyRequirementPublishingAdditionalInfo> _PolicyRequirementPublishingAdditionalInfoes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementPublishingAdditionalInfoAction> PolicyRequirementPublishingAdditionalInfoActions
        {
            get
            {
                if ((_PolicyRequirementPublishingAdditionalInfoActions == null))
                {
                    _PolicyRequirementPublishingAdditionalInfoActions = base.CreateObjectSet<PolicyRequirementPublishingAdditionalInfoAction>("PolicyRequirementPublishingAdditionalInfoActions");
                }
                return _PolicyRequirementPublishingAdditionalInfoActions;
            }
        }
        private ObjectSet<PolicyRequirementPublishingAdditionalInfoAction> _PolicyRequirementPublishingAdditionalInfoActions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementPublishingControl> PolicyRequirementPublishingControls
        {
            get
            {
                if ((_PolicyRequirementPublishingControls == null))
                {
                    _PolicyRequirementPublishingControls = base.CreateObjectSet<PolicyRequirementPublishingControl>("PolicyRequirementPublishingControls");
                }
                return _PolicyRequirementPublishingControls;
            }
        }
        private ObjectSet<PolicyRequirementPublishingControl> _PolicyRequirementPublishingControls;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementPublishQueue> PolicyRequirementPublishQueues
        {
            get
            {
                if ((_PolicyRequirementPublishQueues == null))
                {
                    _PolicyRequirementPublishQueues = base.CreateObjectSet<PolicyRequirementPublishQueue>("PolicyRequirementPublishQueues");
                }
                return _PolicyRequirementPublishQueues;
            }
        }
        private ObjectSet<PolicyRequirementPublishQueue> _PolicyRequirementPublishQueues;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementSource> PolicyRequirementSources
        {
            get
            {
                if ((_PolicyRequirementSources == null))
                {
                    _PolicyRequirementSources = base.CreateObjectSet<PolicyRequirementSource>("PolicyRequirementSources");
                }
                return _PolicyRequirementSources;
            }
        }
        private ObjectSet<PolicyRequirementSource> _PolicyRequirementSources;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementSubject> PolicyRequirementSubjects
        {
            get
            {
                if ((_PolicyRequirementSubjects == null))
                {
                    _PolicyRequirementSubjects = base.CreateObjectSet<PolicyRequirementSubject>("PolicyRequirementSubjects");
                }
                return _PolicyRequirementSubjects;
            }
        }
        private ObjectSet<PolicyRequirementSubject> _PolicyRequirementSubjects;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TT_SYS_GENID> TT_SYS_GENID
        {
            get
            {
                if ((_TT_SYS_GENID == null))
                {
                    _TT_SYS_GENID = base.CreateObjectSet<TT_SYS_GENID>("TT_SYS_GENID");
                }
                return _TT_SYS_GENID;
            }
        }
        private ObjectSet<TT_SYS_GENID> _TT_SYS_GENID;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementAssigmentQueueType> PolicyRequirementAssigmentQueueTypes
        {
            get
            {
                if ((_PolicyRequirementAssigmentQueueTypes == null))
                {
                    _PolicyRequirementAssigmentQueueTypes = base.CreateObjectSet<PolicyRequirementAssigmentQueueType>("PolicyRequirementAssigmentQueueTypes");
                }
                return _PolicyRequirementAssigmentQueueTypes;
            }
        }
        private ObjectSet<PolicyRequirementAssigmentQueueType> _PolicyRequirementAssigmentQueueTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementAssignedHardnessQueue> PolicyRequirementAssignedHardnessQueues
        {
            get
            {
                if ((_PolicyRequirementAssignedHardnessQueues == null))
                {
                    _PolicyRequirementAssignedHardnessQueues = base.CreateObjectSet<PolicyRequirementAssignedHardnessQueue>("PolicyRequirementAssignedHardnessQueues");
                }
                return _PolicyRequirementAssignedHardnessQueues;
            }
        }
        private ObjectSet<PolicyRequirementAssignedHardnessQueue> _PolicyRequirementAssignedHardnessQueues;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementModificationQueue> PolicyRequirementModificationQueues
        {
            get
            {
                if ((_PolicyRequirementModificationQueues == null))
                {
                    _PolicyRequirementModificationQueues = base.CreateObjectSet<PolicyRequirementModificationQueue>("PolicyRequirementModificationQueues");
                }
                return _PolicyRequirementModificationQueues;
            }
        }
        private ObjectSet<PolicyRequirementModificationQueue> _PolicyRequirementModificationQueues;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementModificationAssignmentQueue> PolicyRequirementModificationAssignmentQueues
        {
            get
            {
                if ((_PolicyRequirementModificationAssignmentQueues == null))
                {
                    _PolicyRequirementModificationAssignmentQueues = base.CreateObjectSet<PolicyRequirementModificationAssignmentQueue>("PolicyRequirementModificationAssignmentQueues");
                }
                return _PolicyRequirementModificationAssignmentQueues;
            }
        }
        private ObjectSet<PolicyRequirementModificationAssignmentQueue> _PolicyRequirementModificationAssignmentQueues;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementChangeRequestAction> PolicyRequirementChangeRequestActions
        {
            get
            {
                if ((_PolicyRequirementChangeRequestActions == null))
                {
                    _PolicyRequirementChangeRequestActions = base.CreateObjectSet<PolicyRequirementChangeRequestAction>("PolicyRequirementChangeRequestActions");
                }
                return _PolicyRequirementChangeRequestActions;
            }
        }
        private ObjectSet<PolicyRequirementChangeRequestAction> _PolicyRequirementChangeRequestActions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementChangeRequestStatu> PolicyRequirementChangeRequestStatus
        {
            get
            {
                if ((_PolicyRequirementChangeRequestStatus == null))
                {
                    _PolicyRequirementChangeRequestStatus = base.CreateObjectSet<PolicyRequirementChangeRequestStatu>("PolicyRequirementChangeRequestStatus");
                }
                return _PolicyRequirementChangeRequestStatus;
            }
        }
        private ObjectSet<PolicyRequirementChangeRequestStatu> _PolicyRequirementChangeRequestStatus;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementChangeRequest> PolicyRequirementChangeRequests
        {
            get
            {
                if ((_PolicyRequirementChangeRequests == null))
                {
                    _PolicyRequirementChangeRequests = base.CreateObjectSet<PolicyRequirementChangeRequest>("PolicyRequirementChangeRequests");
                }
                return _PolicyRequirementChangeRequests;
            }
        }
        private ObjectSet<PolicyRequirementChangeRequest> _PolicyRequirementChangeRequests;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bookmark> Bookmarks
        {
            get
            {
                if ((_Bookmarks == null))
                {
                    _Bookmarks = base.CreateObjectSet<Bookmark>("Bookmarks");
                }
                return _Bookmarks;
            }
        }
        private ObjectSet<Bookmark> _Bookmarks;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<APP_SETTINGS> APP_SETTINGS
        {
            get
            {
                if ((_APP_SETTINGS == null))
                {
                    _APP_SETTINGS = base.CreateObjectSet<APP_SETTINGS>("APP_SETTINGS");
                }
                return _APP_SETTINGS;
            }
        }
        private ObjectSet<APP_SETTINGS> _APP_SETTINGS;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementLocalAuthority> PolicyRequirementLocalAuthorities
        {
            get
            {
                if ((_PolicyRequirementLocalAuthorities == null))
                {
                    _PolicyRequirementLocalAuthorities = base.CreateObjectSet<PolicyRequirementLocalAuthority>("PolicyRequirementLocalAuthorities");
                }
                return _PolicyRequirementLocalAuthorities;
            }
        }
        private ObjectSet<PolicyRequirementLocalAuthority> _PolicyRequirementLocalAuthorities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementLocation> PolicyRequirementLocations
        {
            get
            {
                if ((_PolicyRequirementLocations == null))
                {
                    _PolicyRequirementLocations = base.CreateObjectSet<PolicyRequirementLocation>("PolicyRequirementLocations");
                }
                return _PolicyRequirementLocations;
            }
        }
        private ObjectSet<PolicyRequirementLocation> _PolicyRequirementLocations;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyRequirementChildSubject> PolicyRequirementChildSubjects
        {
            get
            {
                if ((_PolicyRequirementChildSubjects == null))
                {
                    _PolicyRequirementChildSubjects = base.CreateObjectSet<PolicyRequirementChildSubject>("PolicyRequirementChildSubjects");
                }
                return _PolicyRequirementChildSubjects;
            }
        }
        private ObjectSet<PolicyRequirementChildSubject> _PolicyRequirementChildSubjects;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PublicSpaceManagementTheme> PublicSpaceManagementThemes
        {
            get
            {
                if ((_PublicSpaceManagementThemes == null))
                {
                    _PublicSpaceManagementThemes = base.CreateObjectSet<PublicSpaceManagementTheme>("PublicSpaceManagementThemes");
                }
                return _PublicSpaceManagementThemes;
            }
        }
        private ObjectSet<PublicSpaceManagementTheme> _PublicSpaceManagementThemes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PublicSpaceManagementThemeReference> PublicSpaceManagementThemeReferences
        {
            get
            {
                if ((_PublicSpaceManagementThemeReferences == null))
                {
                    _PublicSpaceManagementThemeReferences = base.CreateObjectSet<PublicSpaceManagementThemeReference>("PublicSpaceManagementThemeReferences");
                }
                return _PublicSpaceManagementThemeReferences;
            }
        }
        private ObjectSet<PublicSpaceManagementThemeReference> _PublicSpaceManagementThemeReferences;

        #endregion

        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirements(PolicyRequirement policyRequirement)
        {
            base.AddObject("PolicyRequirements", policyRequirement);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementAreas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementAreas(PolicyRequirementArea policyRequirementArea)
        {
            base.AddObject("PolicyRequirementAreas", policyRequirementArea);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementAssignedAttachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementAssignedAttachments(PolicyRequirementAssignedAttachment policyRequirementAssignedAttachment)
        {
            base.AddObject("PolicyRequirementAssignedAttachments", policyRequirementAssignedAttachment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementAssignedHardnesses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementAssignedHardnesses(PolicyRequirementAssignedHardness policyRequirementAssignedHardness)
        {
            base.AddObject("PolicyRequirementAssignedHardnesses", policyRequirementAssignedHardness);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementAssignedSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementAssignedSources(PolicyRequirementAssignedSource policyRequirementAssignedSource)
        {
            base.AddObject("PolicyRequirementAssignedSources", policyRequirementAssignedSource);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementAttachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementAttachments(PolicyRequirementAttachment policyRequirementAttachment)
        {
            base.AddObject("PolicyRequirementAttachments", policyRequirementAttachment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementChapters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementChapters(PolicyRequirementChapter policyRequirementChapter)
        {
            base.AddObject("PolicyRequirementChapters", policyRequirementChapter);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementHardnesses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementHardnesses(PolicyRequirementHardness policyRequirementHardness)
        {
            base.AddObject("PolicyRequirementHardnesses", policyRequirementHardness);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementKeywords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementKeywords(PolicyRequirementKeyword policyRequirementKeyword)
        {
            base.AddObject("PolicyRequirementKeywords", policyRequirementKeyword);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementLevels(PolicyRequirementLevel policyRequirementLevel)
        {
            base.AddObject("PolicyRequirementLevels", policyRequirementLevel);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementLevelProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementLevelProperties(PolicyRequirementLevelProperty policyRequirementLevelProperty)
        {
            base.AddObject("PolicyRequirementLevelProperties", policyRequirementLevelProperty);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementPublishingAdditionalInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementPublishingAdditionalInfoes(PolicyRequirementPublishingAdditionalInfo policyRequirementPublishingAdditionalInfo)
        {
            base.AddObject("PolicyRequirementPublishingAdditionalInfoes", policyRequirementPublishingAdditionalInfo);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementPublishingAdditionalInfoActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementPublishingAdditionalInfoActions(PolicyRequirementPublishingAdditionalInfoAction policyRequirementPublishingAdditionalInfoAction)
        {
            base.AddObject("PolicyRequirementPublishingAdditionalInfoActions", policyRequirementPublishingAdditionalInfoAction);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementPublishingControls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementPublishingControls(PolicyRequirementPublishingControl policyRequirementPublishingControl)
        {
            base.AddObject("PolicyRequirementPublishingControls", policyRequirementPublishingControl);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementPublishQueues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementPublishQueues(PolicyRequirementPublishQueue policyRequirementPublishQueue)
        {
            base.AddObject("PolicyRequirementPublishQueues", policyRequirementPublishQueue);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementSources(PolicyRequirementSource policyRequirementSource)
        {
            base.AddObject("PolicyRequirementSources", policyRequirementSource);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementSubjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementSubjects(PolicyRequirementSubject policyRequirementSubject)
        {
            base.AddObject("PolicyRequirementSubjects", policyRequirementSubject);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TT_SYS_GENID EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTT_SYS_GENID(TT_SYS_GENID tT_SYS_GENID)
        {
            base.AddObject("TT_SYS_GENID", tT_SYS_GENID);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementAssigmentQueueTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementAssigmentQueueTypes(PolicyRequirementAssigmentQueueType policyRequirementAssigmentQueueType)
        {
            base.AddObject("PolicyRequirementAssigmentQueueTypes", policyRequirementAssigmentQueueType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementAssignedHardnessQueues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementAssignedHardnessQueues(PolicyRequirementAssignedHardnessQueue policyRequirementAssignedHardnessQueue)
        {
            base.AddObject("PolicyRequirementAssignedHardnessQueues", policyRequirementAssignedHardnessQueue);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementModificationQueues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementModificationQueues(PolicyRequirementModificationQueue policyRequirementModificationQueue)
        {
            base.AddObject("PolicyRequirementModificationQueues", policyRequirementModificationQueue);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementModificationAssignmentQueues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementModificationAssignmentQueues(PolicyRequirementModificationAssignmentQueue policyRequirementModificationAssignmentQueue)
        {
            base.AddObject("PolicyRequirementModificationAssignmentQueues", policyRequirementModificationAssignmentQueue);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementChangeRequestActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementChangeRequestActions(PolicyRequirementChangeRequestAction policyRequirementChangeRequestAction)
        {
            base.AddObject("PolicyRequirementChangeRequestActions", policyRequirementChangeRequestAction);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementChangeRequestStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementChangeRequestStatus(PolicyRequirementChangeRequestStatu policyRequirementChangeRequestStatu)
        {
            base.AddObject("PolicyRequirementChangeRequestStatus", policyRequirementChangeRequestStatu);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementChangeRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementChangeRequests(PolicyRequirementChangeRequest policyRequirementChangeRequest)
        {
            base.AddObject("PolicyRequirementChangeRequests", policyRequirementChangeRequest);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Bookmarks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBookmarks(Bookmark bookmark)
        {
            base.AddObject("Bookmarks", bookmark);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the APP_SETTINGS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAPP_SETTINGS(APP_SETTINGS aPP_SETTINGS)
        {
            base.AddObject("APP_SETTINGS", aPP_SETTINGS);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementLocalAuthorities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementLocalAuthorities(PolicyRequirementLocalAuthority policyRequirementLocalAuthority)
        {
            base.AddObject("PolicyRequirementLocalAuthorities", policyRequirementLocalAuthority);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementLocations(PolicyRequirementLocation policyRequirementLocation)
        {
            base.AddObject("PolicyRequirementLocations", policyRequirementLocation);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyRequirementChildSubjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyRequirementChildSubjects(PolicyRequirementChildSubject policyRequirementChildSubject)
        {
            base.AddObject("PolicyRequirementChildSubjects", policyRequirementChildSubject);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PublicSpaceManagementThemes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPublicSpaceManagementThemes(PublicSpaceManagementTheme publicSpaceManagementTheme)
        {
            base.AddObject("PublicSpaceManagementThemes", publicSpaceManagementTheme);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PublicSpaceManagementThemeReferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPublicSpaceManagementThemeReferences(PublicSpaceManagementThemeReference publicSpaceManagementThemeReference)
        {
            base.AddObject("PublicSpaceManagementThemeReferences", publicSpaceManagementThemeReference);
        }

        #endregion

        #region Function Imports

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<dali_GetKeywords_Result> dali_GetKeywords()
        {
            return base.ExecuteFunction<dali_GetKeywords_Result>("dali_GetKeywords");
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<dali_GetPolicyRequirementPaths_Result> dali_GetPolicyRequirementPaths_Result()
        {
            return base.ExecuteFunction<dali_GetPolicyRequirementPaths_Result>("dali_GetPolicyRequirementPaths_Result");
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<dali_GetPolicyRequirementQueuePaths_Result> dali_GetPolicyRequirementQueuePaths()
        {
            return base.ExecuteFunction<dali_GetPolicyRequirementQueuePaths_Result>("dali_GetPolicyRequirementQueuePaths");
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int GetPlanOfRequirements()
        {
            return base.ExecuteFunction("GetPlanOfRequirements");
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<GetPlanOfRequirementsPath_Result> GetPlanOfRequirementsPath()
        {
            return base.ExecuteFunction<GetPlanOfRequirementsPath_Result>("GetPlanOfRequirementsPath");
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="versionId">No Metadata Documentation available.</param>
        public ObjectResult<dali_GetPolicyRequirements_Result> dali_GetPolicyRequirements(Nullable<global::System.Int32> versionId)
        {
            ObjectParameter versionIdParameter;
            if (versionId.HasValue)
            {
                versionIdParameter = new ObjectParameter("VersionId", versionId);
            }
            else
            {
                versionIdParameter = new ObjectParameter("VersionId", typeof(global::System.Int32));
            }

            return base.ExecuteFunction<dali_GetPolicyRequirements_Result>("dali_GetPolicyRequirements", versionIdParameter);
        }

        #endregion

    }

    #endregion

    #region Entities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "APP_SETTINGS")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class APP_SETTINGS : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new APP_SETTINGS object.
        /// </summary>
        /// <param name="settingsName">Initial value of the SettingsName property.</param>
        public static APP_SETTINGS CreateAPP_SETTINGS(global::System.String settingsName)
        {
            APP_SETTINGS aPP_SETTINGS = new APP_SETTINGS();
            aPP_SETTINGS.SettingsName = settingsName;
            return aPP_SETTINGS;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String SettingsName
        {
            get
            {
                return _SettingsName;
            }
            set
            {
                if (_SettingsName != value)
                {
                    OnSettingsNameChanging(value);
                    ReportPropertyChanging("SettingsName");
                    _SettingsName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SettingsName");
                    OnSettingsNameChanged();
                }
            }
        }
        private global::System.String _SettingsName;
        partial void OnSettingsNameChanging(global::System.String value);
        partial void OnSettingsNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String SettingsValues
        {
            get
            {
                return _SettingsValues;
            }
            set
            {
                OnSettingsValuesChanging(value);
                ReportPropertyChanging("SettingsValues");
                _SettingsValues = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SettingsValues");
                OnSettingsValuesChanged();
            }
        }
        private global::System.String _SettingsValues;
        partial void OnSettingsValuesChanging(global::System.String value);
        partial void OnSettingsValuesChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "Bookmark")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Bookmark : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Bookmark object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Bookmark CreateBookmark(global::System.Int32 id)
        {
            Bookmark bookmark = new Bookmark();
            bookmark.Id = id;
            return bookmark;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderIndex
        {
            get
            {
                return _OrderIndex;
            }
            set
            {
                OnOrderIndexChanging(value);
                ReportPropertyChanging("OrderIndex");
                _OrderIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderIndex");
                OnOrderIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderIndex;
        partial void OnOrderIndexChanging(Nullable<global::System.Int32> value);
        partial void OnOrderIndexChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentIdChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirement")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirement : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirement object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        public static PolicyRequirement CreatePolicyRequirement(global::System.Int32 id, global::System.Int32 versionId)
        {
            PolicyRequirement policyRequirement = new PolicyRequirement();
            policyRequirement.ID = id;
            policyRequirement.VersionId = versionId;
            return policyRequirement;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                if (_VersionId != value)
                {
                    OnVersionIdChanging(value);
                    ReportPropertyChanging("VersionId");
                    _VersionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VersionId");
                    OnVersionIdChanged();
                }
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChapterID
        {
            get
            {
                return _ChapterID;
            }
            set
            {
                OnChapterIDChanging(value);
                ReportPropertyChanging("ChapterID");
                _ChapterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChapterID");
                OnChapterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ChapterID;
        partial void OnChapterIDChanging(Nullable<global::System.Int32> value);
        partial void OnChapterIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelID
        {
            get
            {
                return _LevelID;
            }
            set
            {
                OnLevelIDChanging(value);
                ReportPropertyChanging("LevelID");
                _LevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelID");
                OnLevelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelID;
        partial void OnLevelIDChanging(Nullable<global::System.Int32> value);
        partial void OnLevelIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AreaID
        {
            get
            {
                return _AreaID;
            }
            set
            {
                OnAreaIDChanging(value);
                ReportPropertyChanging("AreaID");
                _AreaID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AreaID");
                OnAreaIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AreaID;
        partial void OnAreaIDChanging(Nullable<global::System.Int32> value);
        partial void OnAreaIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubjectID;
        partial void OnSubjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupIndex
        {
            get
            {
                return _GroupIndex;
            }
            set
            {
                OnGroupIndexChanging(value);
                ReportPropertyChanging("GroupIndex");
                _GroupIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupIndex");
                OnGroupIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupIndex;
        partial void OnGroupIndexChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIndexChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChildSubjectID
        {
            get
            {
                return _ChildSubjectID;
            }
            set
            {
                OnChildSubjectIDChanging(value);
                ReportPropertyChanging("ChildSubjectID");
                _ChildSubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChildSubjectID");
                OnChildSubjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ChildSubjectID;
        partial void OnChildSubjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnChildSubjectIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderIndex
        {
            get
            {
                return _OrderIndex;
            }
            set
            {
                OnOrderIndexChanging(value);
                ReportPropertyChanging("OrderIndex");
                _OrderIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderIndex");
                OnOrderIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderIndex;
        partial void OnOrderIndexChanging(Nullable<global::System.Int32> value);
        partial void OnOrderIndexChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UniqueID
        {
            get
            {
                return _UniqueID;
            }
            set
            {
                OnUniqueIDChanging(value);
                ReportPropertyChanging("UniqueID");
                _UniqueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueID");
                OnUniqueIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UniqueID;
        partial void OnUniqueIDChanging(Nullable<global::System.Guid> value);
        partial void OnUniqueIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocalAuthorityID
        {
            get
            {
                return _LocalAuthorityID;
            }
            set
            {
                OnLocalAuthorityIDChanging(value);
                ReportPropertyChanging("LocalAuthorityID");
                _LocalAuthorityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocalAuthorityID");
                OnLocalAuthorityIDChanged();
            }
        }
        private Nullable<global::System.Guid> _LocalAuthorityID;
        partial void OnLocalAuthorityIDChanging(Nullable<global::System.Guid> value);
        partial void OnLocalAuthorityIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationID;
        partial void OnLocationIDChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirement_PolicyRequirementArea", "PolicyRequirementArea")]
        public PolicyRequirementArea PolicyRequirementArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementArea>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementArea", "PolicyRequirementArea").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementArea>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementArea", "PolicyRequirementArea").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementArea> PolicyRequirementAreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementArea>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementArea", "PolicyRequirementArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementArea>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementArea", "PolicyRequirementArea", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirement_PolicyRequirementChapter", "PolicyRequirementChapter")]
        public PolicyRequirementChapter PolicyRequirementChapter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementChapter>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementChapter", "PolicyRequirementChapter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementChapter>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementChapter", "PolicyRequirementChapter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementChapter> PolicyRequirementChapterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementChapter>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementChapter", "PolicyRequirementChapter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementChapter>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementChapter", "PolicyRequirementChapter", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirement_PolicyRequirementLevel", "PolicyRequirementLevel")]
        public PolicyRequirementLevel PolicyRequirementLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementLevel>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementLevel", "PolicyRequirementLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementLevel>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementLevel", "PolicyRequirementLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementLevel> PolicyRequirementLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementLevel>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementLevel", "PolicyRequirementLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementLevel>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementLevel", "PolicyRequirementLevel", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirement_PolicyRequirementSubject", "PolicyRequirementSubject")]
        public PolicyRequirementSubject PolicyRequirementSubject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementSubject>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementSubject", "PolicyRequirementSubject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementSubject>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementSubject", "PolicyRequirementSubject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementSubject> PolicyRequirementSubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementSubject>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementSubject", "PolicyRequirementSubject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementSubject>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementSubject", "PolicyRequirementSubject", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementModificationQueuePolicyRequirement", "PolicyRequirementModificationQueue")]
        public PolicyRequirementModificationQueue PolicyRequirementModificationQueue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementModificationQueue>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationQueuePolicyRequirement", "PolicyRequirementModificationQueue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementModificationQueue>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationQueuePolicyRequirement", "PolicyRequirementModificationQueue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementModificationQueue> PolicyRequirementModificationQueueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementModificationQueue>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationQueuePolicyRequirement", "PolicyRequirementModificationQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementModificationQueue>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationQueuePolicyRequirement", "PolicyRequirementModificationQueue", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementPolicyRequirementAssignedSource", "PolicyRequirementAssignedSource")]
        public EntityCollection<PolicyRequirementAssignedSource> PolicyRequirementAssignedSources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirementAssignedSource>("PolicyRequirements.DataEntityModels.PolicyRequirementPolicyRequirementAssignedSource", "PolicyRequirementAssignedSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirementAssignedSource>("PolicyRequirements.DataEntityModels.PolicyRequirementPolicyRequirementAssignedSource", "PolicyRequirementAssignedSource", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementAssignedAttachmentPolicyRequirement", "PolicyRequirementAssignedAttachment")]
        public EntityCollection<PolicyRequirementAssignedAttachment> PolicyRequirementAssignedAttachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirementAssignedAttachment>("PolicyRequirements.DataEntityModels.PolicyRequirementAssignedAttachmentPolicyRequirement", "PolicyRequirementAssignedAttachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirementAssignedAttachment>("PolicyRequirements.DataEntityModels.PolicyRequirementAssignedAttachmentPolicyRequirement", "PolicyRequirementAssignedAttachment", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementAssignedHardnessPolicyRequirement", "PolicyRequirementAssignedHardness")]
        public EntityCollection<PolicyRequirementAssignedHardness> PolicyRequirementAssignedHardness
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirementAssignedHardness>("PolicyRequirements.DataEntityModels.PolicyRequirementAssignedHardnessPolicyRequirement", "PolicyRequirementAssignedHardness");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirementAssignedHardness>("PolicyRequirements.DataEntityModels.PolicyRequirementAssignedHardnessPolicyRequirement", "PolicyRequirementAssignedHardness", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementLocationPolicyRequirement", "PolicyRequirementLocation")]
        public PolicyRequirementLocation PolicyRequirementLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementLocation>("PolicyRequirements.DataEntityModels.PolicyRequirementLocationPolicyRequirement", "PolicyRequirementLocation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementLocation>("PolicyRequirements.DataEntityModels.PolicyRequirementLocationPolicyRequirement", "PolicyRequirementLocation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementLocation> PolicyRequirementLocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementLocation>("PolicyRequirements.DataEntityModels.PolicyRequirementLocationPolicyRequirement", "PolicyRequirementLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementLocation>("PolicyRequirements.DataEntityModels.PolicyRequirementLocationPolicyRequirement", "PolicyRequirementLocation", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementLocalAuthorityPolicyRequirement", "PolicyRequirementLocalAuthority")]
        public PolicyRequirementLocalAuthority PolicyRequirementLocalAuthority
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementLocalAuthority>("PolicyRequirements.DataEntityModels.PolicyRequirementLocalAuthorityPolicyRequirement", "PolicyRequirementLocalAuthority").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementLocalAuthority>("PolicyRequirements.DataEntityModels.PolicyRequirementLocalAuthorityPolicyRequirement", "PolicyRequirementLocalAuthority").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementLocalAuthority> PolicyRequirementLocalAuthorityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementLocalAuthority>("PolicyRequirements.DataEntityModels.PolicyRequirementLocalAuthorityPolicyRequirement", "PolicyRequirementLocalAuthority");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementLocalAuthority>("PolicyRequirements.DataEntityModels.PolicyRequirementLocalAuthorityPolicyRequirement", "PolicyRequirementLocalAuthority", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementPolicyRequirementChildSubject", "PolicyRequirementChildSubject")]
        public PolicyRequirementChildSubject PolicyRequirementChildSubjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementChildSubject>("PolicyRequirements.DataEntityModels.PolicyRequirementPolicyRequirementChildSubject", "PolicyRequirementChildSubject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementChildSubject>("PolicyRequirements.DataEntityModels.PolicyRequirementPolicyRequirementChildSubject", "PolicyRequirementChildSubject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementChildSubject> PolicyRequirementChildSubjectsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementChildSubject>("PolicyRequirements.DataEntityModels.PolicyRequirementPolicyRequirementChildSubject", "PolicyRequirementChildSubject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementChildSubject>("PolicyRequirements.DataEntityModels.PolicyRequirementPolicyRequirementChildSubject", "PolicyRequirementChildSubject", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PublicSpaceManagementThemeReferencePolicyRequirement", "PublicSpaceManagementThemeReference")]
        public EntityCollection<PublicSpaceManagementThemeReference> PublicSpaceManagementThemeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublicSpaceManagementThemeReference>("PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReferencePolicyRequirement", "PublicSpaceManagementThemeReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublicSpaceManagementThemeReference>("PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReferencePolicyRequirement", "PublicSpaceManagementThemeReference", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementArea")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementArea : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementArea object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PolicyRequirementArea CreatePolicyRequirementArea(global::System.Int32 id, global::System.Int32 versionId, global::System.String description)
        {
            PolicyRequirementArea policyRequirementArea = new PolicyRequirementArea();
            policyRequirementArea.ID = id;
            policyRequirementArea.VersionId = versionId;
            policyRequirementArea.Description = description;
            return policyRequirementArea;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                if (_VersionId != value)
                {
                    OnVersionIdChanging(value);
                    ReportPropertyChanging("VersionId");
                    _VersionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VersionId");
                    OnVersionIdChanged();
                }
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelId
        {
            get
            {
                return _LevelId;
            }
            set
            {
                OnLevelIdChanging(value);
                ReportPropertyChanging("LevelId");
                _LevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelId");
                OnLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelId;
        partial void OnLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnLevelIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FetchByDefault
        {
            get
            {
                return _FetchByDefault;
            }
            set
            {
                OnFetchByDefaultChanging(value);
                ReportPropertyChanging("FetchByDefault");
                _FetchByDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FetchByDefault");
                OnFetchByDefaultChanged();
            }
        }
        private Nullable<global::System.Int32> _FetchByDefault;
        partial void OnFetchByDefaultChanging(Nullable<global::System.Int32> value);
        partial void OnFetchByDefaultChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTownSpecific
        {
            get
            {
                return _IsTownSpecific;
            }
            set
            {
                OnIsTownSpecificChanging(value);
                ReportPropertyChanging("IsTownSpecific");
                _IsTownSpecific = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTownSpecific");
                OnIsTownSpecificChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTownSpecific;
        partial void OnIsTownSpecificChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTownSpecificChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirement_PolicyRequirementArea", "PolicyRequirement")]
        public EntityCollection<PolicyRequirement> PolicyRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementArea", "PolicyRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementArea", "PolicyRequirement", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementAssigmentQueueType")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementAssigmentQueueType : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementAssigmentQueueType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static PolicyRequirementAssigmentQueueType CreatePolicyRequirementAssigmentQueueType(global::System.Int32 id)
        {
            PolicyRequirementAssigmentQueueType policyRequirementAssigmentQueueType = new PolicyRequirementAssigmentQueueType();
            policyRequirementAssigmentQueueType.Id = id;
            return policyRequirementAssigmentQueueType;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementModificationAssignmentQueuePolicyRequirementAssigmentQueueType", "PolicyRequirementModificationAssignmentQueue")]
        public EntityCollection<PolicyRequirementModificationAssignmentQueue> PolicyRequirementModificationAssignmentQueue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirementModificationAssignmentQueue>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueuePolicyRequirementAssigmentQueueType", "PolicyRequirementModificationAssignmentQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirementModificationAssignmentQueue>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueuePolicyRequirementAssigmentQueueType", "PolicyRequirementModificationAssignmentQueue", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementAssignedAttachment")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementAssignedAttachment : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementAssignedAttachment object.
        /// </summary>
        /// <param name="policyRequirementId">Initial value of the PolicyRequirementId property.</param>
        /// <param name="attachmentId">Initial value of the AttachmentId property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        public static PolicyRequirementAssignedAttachment CreatePolicyRequirementAssignedAttachment(global::System.Int32 policyRequirementId, global::System.Int32 attachmentId, global::System.Int32 versionId)
        {
            PolicyRequirementAssignedAttachment policyRequirementAssignedAttachment = new PolicyRequirementAssignedAttachment();
            policyRequirementAssignedAttachment.PolicyRequirementId = policyRequirementId;
            policyRequirementAssignedAttachment.AttachmentId = attachmentId;
            policyRequirementAssignedAttachment.VersionId = versionId;
            return policyRequirementAssignedAttachment;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyRequirementId
        {
            get
            {
                return _PolicyRequirementId;
            }
            set
            {
                if (_PolicyRequirementId != value)
                {
                    OnPolicyRequirementIdChanging(value);
                    ReportPropertyChanging("PolicyRequirementId");
                    _PolicyRequirementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyRequirementId");
                    OnPolicyRequirementIdChanged();
                }
            }
        }
        private global::System.Int32 _PolicyRequirementId;
        partial void OnPolicyRequirementIdChanging(global::System.Int32 value);
        partial void OnPolicyRequirementIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttachmentId
        {
            get
            {
                return _AttachmentId;
            }
            set
            {
                if (_AttachmentId != value)
                {
                    OnAttachmentIdChanging(value);
                    ReportPropertyChanging("AttachmentId");
                    _AttachmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttachmentId");
                    OnAttachmentIdChanged();
                }
            }
        }
        private global::System.Int32 _AttachmentId;
        partial void OnAttachmentIdChanging(global::System.Int32 value);
        partial void OnAttachmentIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                if (_VersionId != value)
                {
                    OnVersionIdChanging(value);
                    ReportPropertyChanging("VersionId");
                    _VersionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VersionId");
                    OnVersionIdChanged();
                }
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementAssignedAttachment_PolicyRequirementAttachment", "PolicyRequirementAttachment")]
        public PolicyRequirementAttachment PolicyRequirementAttachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementAttachment>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedAttachment_PolicyRequirementAttachment", "PolicyRequirementAttachment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementAttachment>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedAttachment_PolicyRequirementAttachment", "PolicyRequirementAttachment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementAttachment> PolicyRequirementAttachmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementAttachment>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedAttachment_PolicyRequirementAttachment", "PolicyRequirementAttachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementAttachment>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedAttachment_PolicyRequirementAttachment", "PolicyRequirementAttachment", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementAssignedAttachmentPolicyRequirement", "PolicyRequirement")]
        public PolicyRequirement PolicyRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementAssignedAttachmentPolicyRequirement", "PolicyRequirement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementAssignedAttachmentPolicyRequirement", "PolicyRequirement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirement> PolicyRequirementsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementAssignedAttachmentPolicyRequirement", "PolicyRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementAssignedAttachmentPolicyRequirement", "PolicyRequirement", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementAssignedHardness")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementAssignedHardness : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementAssignedHardness object.
        /// </summary>
        /// <param name="hardnessId">Initial value of the HardnessId property.</param>
        /// <param name="policyRequirementId">Initial value of the PolicyRequirementId property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        public static PolicyRequirementAssignedHardness CreatePolicyRequirementAssignedHardness(global::System.Int32 hardnessId, global::System.Int32 policyRequirementId, global::System.Int32 versionId)
        {
            PolicyRequirementAssignedHardness policyRequirementAssignedHardness = new PolicyRequirementAssignedHardness();
            policyRequirementAssignedHardness.HardnessId = hardnessId;
            policyRequirementAssignedHardness.PolicyRequirementId = policyRequirementId;
            policyRequirementAssignedHardness.VersionId = versionId;
            return policyRequirementAssignedHardness;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 HardnessId
        {
            get
            {
                return _HardnessId;
            }
            set
            {
                if (_HardnessId != value)
                {
                    OnHardnessIdChanging(value);
                    ReportPropertyChanging("HardnessId");
                    _HardnessId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HardnessId");
                    OnHardnessIdChanged();
                }
            }
        }
        private global::System.Int32 _HardnessId;
        partial void OnHardnessIdChanging(global::System.Int32 value);
        partial void OnHardnessIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyRequirementId
        {
            get
            {
                return _PolicyRequirementId;
            }
            set
            {
                if (_PolicyRequirementId != value)
                {
                    OnPolicyRequirementIdChanging(value);
                    ReportPropertyChanging("PolicyRequirementId");
                    _PolicyRequirementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyRequirementId");
                    OnPolicyRequirementIdChanged();
                }
            }
        }
        private global::System.Int32 _PolicyRequirementId;
        partial void OnPolicyRequirementIdChanging(global::System.Int32 value);
        partial void OnPolicyRequirementIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                if (_VersionId != value)
                {
                    OnVersionIdChanging(value);
                    ReportPropertyChanging("VersionId");
                    _VersionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VersionId");
                    OnVersionIdChanged();
                }
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String HelpText
        {
            get
            {
                return _HelpText;
            }
            set
            {
                OnHelpTextChanging(value);
                ReportPropertyChanging("HelpText");
                _HelpText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HelpText");
                OnHelpTextChanged();
            }
        }
        private global::System.String _HelpText;
        partial void OnHelpTextChanging(global::System.String value);
        partial void OnHelpTextChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementAssignedHardness_PolicyRequirementHardness", "PolicyRequirementHardness")]
        public PolicyRequirementHardness PolicyRequirementHardness
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementHardness>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedHardness_PolicyRequirementHardness", "PolicyRequirementHardness").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementHardness>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedHardness_PolicyRequirementHardness", "PolicyRequirementHardness").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementHardness> PolicyRequirementHardnessReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementHardness>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedHardness_PolicyRequirementHardness", "PolicyRequirementHardness");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementHardness>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedHardness_PolicyRequirementHardness", "PolicyRequirementHardness", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementAssignedHardnessPolicyRequirement", "PolicyRequirement")]
        public PolicyRequirement PolicyRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementAssignedHardnessPolicyRequirement", "PolicyRequirement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementAssignedHardnessPolicyRequirement", "PolicyRequirement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirement> PolicyRequirementsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementAssignedHardnessPolicyRequirement", "PolicyRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementAssignedHardnessPolicyRequirement", "PolicyRequirement", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementAssignedHardnessQueue")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementAssignedHardnessQueue : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementAssignedHardnessQueue object.
        /// </summary>
        /// <param name="hardnessId">Initial value of the HardnessId property.</param>
        /// <param name="policyRequirementId">Initial value of the PolicyRequirementId property.</param>
        public static PolicyRequirementAssignedHardnessQueue CreatePolicyRequirementAssignedHardnessQueue(global::System.Int32 hardnessId, global::System.Int32 policyRequirementId)
        {
            PolicyRequirementAssignedHardnessQueue policyRequirementAssignedHardnessQueue = new PolicyRequirementAssignedHardnessQueue();
            policyRequirementAssignedHardnessQueue.HardnessId = hardnessId;
            policyRequirementAssignedHardnessQueue.PolicyRequirementId = policyRequirementId;
            return policyRequirementAssignedHardnessQueue;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 HardnessId
        {
            get
            {
                return _HardnessId;
            }
            set
            {
                if (_HardnessId != value)
                {
                    OnHardnessIdChanging(value);
                    ReportPropertyChanging("HardnessId");
                    _HardnessId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HardnessId");
                    OnHardnessIdChanged();
                }
            }
        }
        private global::System.Int32 _HardnessId;
        partial void OnHardnessIdChanging(global::System.Int32 value);
        partial void OnHardnessIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyRequirementId
        {
            get
            {
                return _PolicyRequirementId;
            }
            set
            {
                if (_PolicyRequirementId != value)
                {
                    OnPolicyRequirementIdChanging(value);
                    ReportPropertyChanging("PolicyRequirementId");
                    _PolicyRequirementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyRequirementId");
                    OnPolicyRequirementIdChanged();
                }
            }
        }
        private global::System.Int32 _PolicyRequirementId;
        partial void OnPolicyRequirementIdChanging(global::System.Int32 value);
        partial void OnPolicyRequirementIdChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementAssignedHardnessQueue_PolicyRequirementHardness", "PolicyRequirementHardness")]
        public PolicyRequirementHardness PolicyRequirementHardness
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementHardness>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedHardnessQueue_PolicyRequirementHardness", "PolicyRequirementHardness").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementHardness>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedHardnessQueue_PolicyRequirementHardness", "PolicyRequirementHardness").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementHardness> PolicyRequirementHardnessReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementHardness>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedHardnessQueue_PolicyRequirementHardness", "PolicyRequirementHardness");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementHardness>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedHardnessQueue_PolicyRequirementHardness", "PolicyRequirementHardness", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementAssignedSource")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementAssignedSource : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementAssignedSource object.
        /// </summary>
        /// <param name="policyRequirementId">Initial value of the PolicyRequirementId property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        public static PolicyRequirementAssignedSource CreatePolicyRequirementAssignedSource(global::System.Int32 policyRequirementId, global::System.Int32 sourceId, global::System.Int32 versionId)
        {
            PolicyRequirementAssignedSource policyRequirementAssignedSource = new PolicyRequirementAssignedSource();
            policyRequirementAssignedSource.PolicyRequirementId = policyRequirementId;
            policyRequirementAssignedSource.SourceId = sourceId;
            policyRequirementAssignedSource.VersionId = versionId;
            return policyRequirementAssignedSource;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyRequirementId
        {
            get
            {
                return _PolicyRequirementId;
            }
            set
            {
                if (_PolicyRequirementId != value)
                {
                    OnPolicyRequirementIdChanging(value);
                    ReportPropertyChanging("PolicyRequirementId");
                    _PolicyRequirementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyRequirementId");
                    OnPolicyRequirementIdChanged();
                }
            }
        }
        private global::System.Int32 _PolicyRequirementId;
        partial void OnPolicyRequirementIdChanging(global::System.Int32 value);
        partial void OnPolicyRequirementIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                if (_SourceId != value)
                {
                    OnSourceIdChanging(value);
                    ReportPropertyChanging("SourceId");
                    _SourceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SourceId");
                    OnSourceIdChanged();
                }
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                if (_VersionId != value)
                {
                    OnVersionIdChanging(value);
                    ReportPropertyChanging("VersionId");
                    _VersionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VersionId");
                    OnVersionIdChanged();
                }
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementAssignedSource_PolicyRequirementSource", "PolicyRequirementSource")]
        public PolicyRequirementSource PolicyRequirementSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementSource>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedSource_PolicyRequirementSource", "PolicyRequirementSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementSource>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedSource_PolicyRequirementSource", "PolicyRequirementSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementSource> PolicyRequirementSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementSource>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedSource_PolicyRequirementSource", "PolicyRequirementSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementSource>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedSource_PolicyRequirementSource", "PolicyRequirementSource", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementPolicyRequirementAssignedSource", "PolicyRequirement")]
        public PolicyRequirement PolicyRequirement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementPolicyRequirementAssignedSource", "PolicyRequirement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementPolicyRequirementAssignedSource", "PolicyRequirement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirement> PolicyRequirementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementPolicyRequirementAssignedSource", "PolicyRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementPolicyRequirementAssignedSource", "PolicyRequirement", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementAttachment")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementAttachment : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementAttachment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PolicyRequirementAttachment CreatePolicyRequirementAttachment(global::System.Int32 id, global::System.String description)
        {
            PolicyRequirementAttachment policyRequirementAttachment = new PolicyRequirementAttachment();
            policyRequirementAttachment.ID = id;
            policyRequirementAttachment.Description = description;
            return policyRequirementAttachment;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String StorageLocation
        {
            get
            {
                return _StorageLocation;
            }
            set
            {
                OnStorageLocationChanging(value);
                ReportPropertyChanging("StorageLocation");
                _StorageLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StorageLocation");
                OnStorageLocationChanged();
            }
        }
        private global::System.String _StorageLocation;
        partial void OnStorageLocationChanging(global::System.String value);
        partial void OnStorageLocationChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementAssignedAttachment_PolicyRequirementAttachment", "PolicyRequirementAssignedAttachment")]
        public EntityCollection<PolicyRequirementAssignedAttachment> PolicyRequirementAssignedAttachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirementAssignedAttachment>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedAttachment_PolicyRequirementAttachment", "PolicyRequirementAssignedAttachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirementAssignedAttachment>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedAttachment_PolicyRequirementAttachment", "PolicyRequirementAssignedAttachment", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementChangeRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementChangeRequest : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementChangeRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="policyRequirementId">Initial value of the PolicyRequirementId property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        /// <param name="remark">Initial value of the Remark property.</param>
        /// <param name="actionId">Initial value of the ActionId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static PolicyRequirementChangeRequest CreatePolicyRequirementChangeRequest(global::System.Int32 id, global::System.Int32 policyRequirementId, global::System.Int32 versionId, global::System.String remark, global::System.Int32 actionId, global::System.Int32 status, global::System.String userName)
        {
            PolicyRequirementChangeRequest policyRequirementChangeRequest = new PolicyRequirementChangeRequest();
            policyRequirementChangeRequest.Id = id;
            policyRequirementChangeRequest.PolicyRequirementId = policyRequirementId;
            policyRequirementChangeRequest.VersionId = versionId;
            policyRequirementChangeRequest.Remark = remark;
            policyRequirementChangeRequest.ActionId = actionId;
            policyRequirementChangeRequest.Status = status;
            policyRequirementChangeRequest.UserName = userName;
            return policyRequirementChangeRequest;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyRequirementId
        {
            get
            {
                return _PolicyRequirementId;
            }
            set
            {
                OnPolicyRequirementIdChanging(value);
                ReportPropertyChanging("PolicyRequirementId");
                _PolicyRequirementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyRequirementId");
                OnPolicyRequirementIdChanged();
            }
        }
        private global::System.Int32 _PolicyRequirementId;
        partial void OnPolicyRequirementIdChanging(global::System.Int32 value);
        partial void OnPolicyRequirementIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                OnVersionIdChanging(value);
                ReportPropertyChanging("VersionId");
                _VersionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionId");
                OnVersionIdChanged();
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActionId
        {
            get
            {
                return _ActionId;
            }
            set
            {
                OnActionIdChanging(value);
                ReportPropertyChanging("ActionId");
                _ActionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActionId");
                OnActionIdChanged();
            }
        }
        private global::System.Int32 _ActionId;
        partial void OnActionIdChanging(global::System.Int32 value);
        partial void OnActionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Int32> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Int32> value);
        partial void OnIsApprovedChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String RejectMessage
        {
            get
            {
                return _RejectMessage;
            }
            set
            {
                OnRejectMessageChanging(value);
                ReportPropertyChanging("RejectMessage");
                _RejectMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RejectMessage");
                OnRejectMessageChanged();
            }
        }
        private global::System.String _RejectMessage;
        partial void OnRejectMessageChanging(global::System.String value);
        partial void OnRejectMessageChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyChangeRequests_PolicyChangeRequestAction", "PolicyRequirementChangeRequestAction")]
        public PolicyRequirementChangeRequestAction PolicyRequirementChangeRequestAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementChangeRequestAction>("PolicyRequirements.DataEntityModels.FK_PolicyChangeRequests_PolicyChangeRequestAction", "PolicyRequirementChangeRequestAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementChangeRequestAction>("PolicyRequirements.DataEntityModels.FK_PolicyChangeRequests_PolicyChangeRequestAction", "PolicyRequirementChangeRequestAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementChangeRequestAction> PolicyRequirementChangeRequestActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementChangeRequestAction>("PolicyRequirements.DataEntityModels.FK_PolicyChangeRequests_PolicyChangeRequestAction", "PolicyRequirementChangeRequestAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementChangeRequestAction>("PolicyRequirements.DataEntityModels.FK_PolicyChangeRequests_PolicyChangeRequestAction", "PolicyRequirementChangeRequestAction", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyChangeRequests_PolicyChangeRequestStatus", "PolicyRequirementChangeRequestStatu")]
        public PolicyRequirementChangeRequestStatu PolicyRequirementChangeRequestStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementChangeRequestStatu>("PolicyRequirements.DataEntityModels.FK_PolicyChangeRequests_PolicyChangeRequestStatus", "PolicyRequirementChangeRequestStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementChangeRequestStatu>("PolicyRequirements.DataEntityModels.FK_PolicyChangeRequests_PolicyChangeRequestStatus", "PolicyRequirementChangeRequestStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementChangeRequestStatu> PolicyRequirementChangeRequestStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementChangeRequestStatu>("PolicyRequirements.DataEntityModels.FK_PolicyChangeRequests_PolicyChangeRequestStatus", "PolicyRequirementChangeRequestStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementChangeRequestStatu>("PolicyRequirements.DataEntityModels.FK_PolicyChangeRequests_PolicyChangeRequestStatus", "PolicyRequirementChangeRequestStatu", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementChangeRequestAction")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementChangeRequestAction : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementChangeRequestAction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static PolicyRequirementChangeRequestAction CreatePolicyRequirementChangeRequestAction(global::System.Int32 id)
        {
            PolicyRequirementChangeRequestAction policyRequirementChangeRequestAction = new PolicyRequirementChangeRequestAction();
            policyRequirementChangeRequestAction.Id = id;
            return policyRequirementChangeRequestAction;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyChangeRequests_PolicyChangeRequestAction", "PolicyRequirementChangeRequest")]
        public EntityCollection<PolicyRequirementChangeRequest> PolicyRequirementChangeRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirementChangeRequest>("PolicyRequirements.DataEntityModels.FK_PolicyChangeRequests_PolicyChangeRequestAction", "PolicyRequirementChangeRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirementChangeRequest>("PolicyRequirements.DataEntityModels.FK_PolicyChangeRequests_PolicyChangeRequestAction", "PolicyRequirementChangeRequest", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementChangeRequestStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementChangeRequestStatu : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementChangeRequestStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static PolicyRequirementChangeRequestStatu CreatePolicyRequirementChangeRequestStatu(global::System.Int32 id)
        {
            PolicyRequirementChangeRequestStatu policyRequirementChangeRequestStatu = new PolicyRequirementChangeRequestStatu();
            policyRequirementChangeRequestStatu.Id = id;
            return policyRequirementChangeRequestStatu;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyChangeRequests_PolicyChangeRequestStatus", "PolicyRequirementChangeRequest")]
        public EntityCollection<PolicyRequirementChangeRequest> PolicyRequirementChangeRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirementChangeRequest>("PolicyRequirements.DataEntityModels.FK_PolicyChangeRequests_PolicyChangeRequestStatus", "PolicyRequirementChangeRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirementChangeRequest>("PolicyRequirements.DataEntityModels.FK_PolicyChangeRequests_PolicyChangeRequestStatus", "PolicyRequirementChangeRequest", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementChapter")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementChapter : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementChapter object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="chapterNumber">Initial value of the ChapterNumber property.</param>
        public static PolicyRequirementChapter CreatePolicyRequirementChapter(global::System.Int32 id, global::System.Int32 versionId, global::System.String description, global::System.String chapterNumber)
        {
            PolicyRequirementChapter policyRequirementChapter = new PolicyRequirementChapter();
            policyRequirementChapter.ID = id;
            policyRequirementChapter.VersionId = versionId;
            policyRequirementChapter.Description = description;
            policyRequirementChapter.ChapterNumber = chapterNumber;
            return policyRequirementChapter;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                if (_VersionId != value)
                {
                    OnVersionIdChanging(value);
                    ReportPropertyChanging("VersionId");
                    _VersionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VersionId");
                    OnVersionIdChanged();
                }
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String ChapterNumber
        {
            get
            {
                return _ChapterNumber;
            }
            set
            {
                OnChapterNumberChanging(value);
                ReportPropertyChanging("ChapterNumber");
                _ChapterNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChapterNumber");
                OnChapterNumberChanged();
            }
        }
        private global::System.String _ChapterNumber;
        partial void OnChapterNumberChanging(global::System.String value);
        partial void OnChapterNumberChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FetchByDefault
        {
            get
            {
                return _FetchByDefault;
            }
            set
            {
                OnFetchByDefaultChanging(value);
                ReportPropertyChanging("FetchByDefault");
                _FetchByDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FetchByDefault");
                OnFetchByDefaultChanged();
            }
        }
        private Nullable<global::System.Int32> _FetchByDefault;
        partial void OnFetchByDefaultChanging(Nullable<global::System.Int32> value);
        partial void OnFetchByDefaultChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTownSpecific
        {
            get
            {
                return _IsTownSpecific;
            }
            set
            {
                OnIsTownSpecificChanging(value);
                ReportPropertyChanging("IsTownSpecific");
                _IsTownSpecific = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTownSpecific");
                OnIsTownSpecificChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTownSpecific;
        partial void OnIsTownSpecificChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTownSpecificChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirement_PolicyRequirementChapter", "PolicyRequirement")]
        public EntityCollection<PolicyRequirement> PolicyRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementChapter", "PolicyRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementChapter", "PolicyRequirement", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementChildSubject")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementChildSubject : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementChildSubject object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PolicyRequirementChildSubject CreatePolicyRequirementChildSubject(global::System.Int32 id, global::System.Int32 versionId, global::System.String description)
        {
            PolicyRequirementChildSubject policyRequirementChildSubject = new PolicyRequirementChildSubject();
            policyRequirementChildSubject.ID = id;
            policyRequirementChildSubject.VersionId = versionId;
            policyRequirementChildSubject.Description = description;
            return policyRequirementChildSubject;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                if (_VersionId != value)
                {
                    OnVersionIdChanging(value);
                    ReportPropertyChanging("VersionId");
                    _VersionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VersionId");
                    OnVersionIdChanged();
                }
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FetchByDefault
        {
            get
            {
                return _FetchByDefault;
            }
            set
            {
                OnFetchByDefaultChanging(value);
                ReportPropertyChanging("FetchByDefault");
                _FetchByDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FetchByDefault");
                OnFetchByDefaultChanged();
            }
        }
        private Nullable<global::System.Int32> _FetchByDefault;
        partial void OnFetchByDefaultChanging(Nullable<global::System.Int32> value);
        partial void OnFetchByDefaultChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTownSpecific
        {
            get
            {
                return _IsTownSpecific;
            }
            set
            {
                OnIsTownSpecificChanging(value);
                ReportPropertyChanging("IsTownSpecific");
                _IsTownSpecific = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTownSpecific");
                OnIsTownSpecificChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTownSpecific;
        partial void OnIsTownSpecificChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTownSpecificChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementPolicyRequirementChildSubject", "PolicyRequirement")]
        public EntityCollection<PolicyRequirement> PolicyRequirement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementPolicyRequirementChildSubject", "PolicyRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementPolicyRequirementChildSubject", "PolicyRequirement", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementHardness")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementHardness : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementHardness object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PolicyRequirementHardness CreatePolicyRequirementHardness(global::System.Int32 id, global::System.String description)
        {
            PolicyRequirementHardness policyRequirementHardness = new PolicyRequirementHardness();
            policyRequirementHardness.ID = id;
            policyRequirementHardness.Description = description;
            return policyRequirementHardness;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String HelpText
        {
            get
            {
                return _HelpText;
            }
            set
            {
                OnHelpTextChanging(value);
                ReportPropertyChanging("HelpText");
                _HelpText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HelpText");
                OnHelpTextChanged();
            }
        }
        private global::System.String _HelpText;
        partial void OnHelpTextChanging(global::System.String value);
        partial void OnHelpTextChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementAssignedHardness_PolicyRequirementHardness", "PolicyRequirementAssignedHardness")]
        public EntityCollection<PolicyRequirementAssignedHardness> PolicyRequirementAssignedHardnesses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirementAssignedHardness>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedHardness_PolicyRequirementHardness", "PolicyRequirementAssignedHardness");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirementAssignedHardness>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedHardness_PolicyRequirementHardness", "PolicyRequirementAssignedHardness", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementAssignedHardnessQueue_PolicyRequirementHardness", "PolicyRequirementAssignedHardnessQueue")]
        public EntityCollection<PolicyRequirementAssignedHardnessQueue> PolicyRequirementAssignedHardnessQueues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirementAssignedHardnessQueue>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedHardnessQueue_PolicyRequirementHardness", "PolicyRequirementAssignedHardnessQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirementAssignedHardnessQueue>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedHardnessQueue_PolicyRequirementHardness", "PolicyRequirementAssignedHardnessQueue", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementKeyword")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementKeyword : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementKeyword object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PolicyRequirementKeyword CreatePolicyRequirementKeyword(global::System.Int32 id, global::System.String description)
        {
            PolicyRequirementKeyword policyRequirementKeyword = new PolicyRequirementKeyword();
            policyRequirementKeyword.Id = id;
            policyRequirementKeyword.Description = description;
            return policyRequirementKeyword;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                OnVersionIdChanging(value);
                ReportPropertyChanging("VersionId");
                _VersionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionId");
                OnVersionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionId;
        partial void OnVersionIdChanging(Nullable<global::System.Int32> value);
        partial void OnVersionIdChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementLevel : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementLevel object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        public static PolicyRequirementLevel CreatePolicyRequirementLevel(global::System.Int32 id, global::System.String name, global::System.String position)
        {
            PolicyRequirementLevel policyRequirementLevel = new PolicyRequirementLevel();
            policyRequirementLevel.ID = id;
            policyRequirementLevel.Name = name;
            policyRequirementLevel.Position = position;
            return policyRequirementLevel;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FetchByDefault
        {
            get
            {
                return _FetchByDefault;
            }
            set
            {
                OnFetchByDefaultChanging(value);
                ReportPropertyChanging("FetchByDefault");
                _FetchByDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FetchByDefault");
                OnFetchByDefaultChanged();
            }
        }
        private Nullable<global::System.Int32> _FetchByDefault;
        partial void OnFetchByDefaultChanging(Nullable<global::System.Int32> value);
        partial void OnFetchByDefaultChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirement_PolicyRequirementLevel", "PolicyRequirement")]
        public EntityCollection<PolicyRequirement> PolicyRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementLevel", "PolicyRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementLevel", "PolicyRequirement", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementLevelProperties_PolicyRequirementLevel", "PolicyRequirementLevelProperty")]
        public EntityCollection<PolicyRequirementLevelProperty> PolicyRequirementLevelProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirementLevelProperty>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementLevelProperties_PolicyRequirementLevel", "PolicyRequirementLevelProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirementLevelProperty>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementLevelProperties_PolicyRequirementLevel", "PolicyRequirementLevelProperty", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementLevelProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementLevelProperty : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementLevelProperty object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        public static PolicyRequirementLevelProperty CreatePolicyRequirementLevelProperty(global::System.Int32 id, global::System.Int32 sequence)
        {
            PolicyRequirementLevelProperty policyRequirementLevelProperty = new PolicyRequirementLevelProperty();
            policyRequirementLevelProperty.Id = id;
            policyRequirementLevelProperty.Sequence = sequence;
            return policyRequirementLevelProperty;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelId
        {
            get
            {
                return _LevelId;
            }
            set
            {
                OnLevelIdChanging(value);
                ReportPropertyChanging("LevelId");
                _LevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelId");
                OnLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelId;
        partial void OnLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnLevelIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementLevelProperties_PolicyRequirementLevel", "PolicyRequirementLevel")]
        public PolicyRequirementLevel PolicyRequirementLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementLevel>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementLevelProperties_PolicyRequirementLevel", "PolicyRequirementLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementLevel>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementLevelProperties_PolicyRequirementLevel", "PolicyRequirementLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementLevel> PolicyRequirementLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementLevel>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementLevelProperties_PolicyRequirementLevel", "PolicyRequirementLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementLevel>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementLevelProperties_PolicyRequirementLevel", "PolicyRequirementLevel", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementLocalAuthority")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementLocalAuthority : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementLocalAuthority object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static PolicyRequirementLocalAuthority CreatePolicyRequirementLocalAuthority(global::System.Guid id)
        {
            PolicyRequirementLocalAuthority policyRequirementLocalAuthority = new PolicyRequirementLocalAuthority();
            policyRequirementLocalAuthority.Id = id;
            return policyRequirementLocalAuthority;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementLocalAuthorityPolicyRequirement", "PolicyRequirement")]
        public EntityCollection<PolicyRequirement> PolicyRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementLocalAuthorityPolicyRequirement", "PolicyRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementLocalAuthorityPolicyRequirement", "PolicyRequirement", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementLocation : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementLocation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static PolicyRequirementLocation CreatePolicyRequirementLocation(global::System.Guid id)
        {
            PolicyRequirementLocation policyRequirementLocation = new PolicyRequirementLocation();
            policyRequirementLocation.Id = id;
            return policyRequirementLocation;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FetchByDefault
        {
            get
            {
                return _FetchByDefault;
            }
            set
            {
                OnFetchByDefaultChanging(value);
                ReportPropertyChanging("FetchByDefault");
                _FetchByDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FetchByDefault");
                OnFetchByDefaultChanged();
            }
        }
        private Nullable<global::System.Boolean> _FetchByDefault;
        partial void OnFetchByDefaultChanging(Nullable<global::System.Boolean> value);
        partial void OnFetchByDefaultChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderIndex
        {
            get
            {
                return _OrderIndex;
            }
            set
            {
                OnOrderIndexChanging(value);
                ReportPropertyChanging("OrderIndex");
                _OrderIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderIndex");
                OnOrderIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderIndex;
        partial void OnOrderIndexChanging(Nullable<global::System.Int32> value);
        partial void OnOrderIndexChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementLocationPolicyRequirement", "PolicyRequirement")]
        public EntityCollection<PolicyRequirement> PolicyRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementLocationPolicyRequirement", "PolicyRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementLocationPolicyRequirement", "PolicyRequirement", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementModificationAssignmentQueue")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementModificationAssignmentQueue : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementModificationAssignmentQueue object.
        /// </summary>
        /// <param name="policyRequirementId">Initial value of the PolicyRequirementId property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        /// <param name="assignmentTypeId">Initial value of the AssignmentTypeId property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static PolicyRequirementModificationAssignmentQueue CreatePolicyRequirementModificationAssignmentQueue(global::System.Int32 policyRequirementId, global::System.Int32 versionId, global::System.Int32 assignmentTypeId, global::System.Int32 id)
        {
            PolicyRequirementModificationAssignmentQueue policyRequirementModificationAssignmentQueue = new PolicyRequirementModificationAssignmentQueue();
            policyRequirementModificationAssignmentQueue.PolicyRequirementId = policyRequirementId;
            policyRequirementModificationAssignmentQueue.VersionId = versionId;
            policyRequirementModificationAssignmentQueue.AssignmentTypeId = assignmentTypeId;
            policyRequirementModificationAssignmentQueue.Id = id;
            return policyRequirementModificationAssignmentQueue;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyRequirementId
        {
            get
            {
                return _PolicyRequirementId;
            }
            set
            {
                if (_PolicyRequirementId != value)
                {
                    OnPolicyRequirementIdChanging(value);
                    ReportPropertyChanging("PolicyRequirementId");
                    _PolicyRequirementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyRequirementId");
                    OnPolicyRequirementIdChanged();
                }
            }
        }
        private global::System.Int32 _PolicyRequirementId;
        partial void OnPolicyRequirementIdChanging(global::System.Int32 value);
        partial void OnPolicyRequirementIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                if (_VersionId != value)
                {
                    OnVersionIdChanging(value);
                    ReportPropertyChanging("VersionId");
                    _VersionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VersionId");
                    OnVersionIdChanged();
                }
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssignmentTypeId
        {
            get
            {
                return _AssignmentTypeId;
            }
            set
            {
                if (_AssignmentTypeId != value)
                {
                    OnAssignmentTypeIdChanging(value);
                    ReportPropertyChanging("AssignmentTypeId");
                    _AssignmentTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssignmentTypeId");
                    OnAssignmentTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _AssignmentTypeId;
        partial void OnAssignmentTypeIdChanging(global::System.Int32 value);
        partial void OnAssignmentTypeIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementModificationAssignmentQueuePolicyRequirementAssigmentQueueType", "PolicyRequirementAssigmentQueueType")]
        public PolicyRequirementAssigmentQueueType PolicyRequirementAssigmentQueueTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementAssigmentQueueType>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueuePolicyRequirementAssigmentQueueType", "PolicyRequirementAssigmentQueueType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementAssigmentQueueType>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueuePolicyRequirementAssigmentQueueType", "PolicyRequirementAssigmentQueueType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementAssigmentQueueType> PolicyRequirementAssigmentQueueTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementAssigmentQueueType>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueuePolicyRequirementAssigmentQueueType", "PolicyRequirementAssigmentQueueType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementAssigmentQueueType>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueuePolicyRequirementAssigmentQueueType", "PolicyRequirementAssigmentQueueType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementModificationAssignmentQueuePolicyRequirementModificationQueue", "PolicyRequirementModificationQueue")]
        public PolicyRequirementModificationQueue PolicyRequirementModificationQueues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementModificationQueue>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueuePolicyRequirementModificationQueue", "PolicyRequirementModificationQueue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementModificationQueue>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueuePolicyRequirementModificationQueue", "PolicyRequirementModificationQueue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementModificationQueue> PolicyRequirementModificationQueuesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementModificationQueue>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueuePolicyRequirementModificationQueue", "PolicyRequirementModificationQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementModificationQueue>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueuePolicyRequirementModificationQueue", "PolicyRequirementModificationQueue", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementModificationQueue")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementModificationQueue : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementModificationQueue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        public static PolicyRequirementModificationQueue CreatePolicyRequirementModificationQueue(global::System.Int32 id, global::System.Int32 versionId)
        {
            PolicyRequirementModificationQueue policyRequirementModificationQueue = new PolicyRequirementModificationQueue();
            policyRequirementModificationQueue.Id = id;
            policyRequirementModificationQueue.VersionId = versionId;
            return policyRequirementModificationQueue;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChapterID
        {
            get
            {
                return _ChapterID;
            }
            set
            {
                OnChapterIDChanging(value);
                ReportPropertyChanging("ChapterID");
                _ChapterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChapterID");
                OnChapterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ChapterID;
        partial void OnChapterIDChanging(Nullable<global::System.Int32> value);
        partial void OnChapterIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationID;
        partial void OnLocationIDChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelID
        {
            get
            {
                return _LevelID;
            }
            set
            {
                OnLevelIDChanging(value);
                ReportPropertyChanging("LevelID");
                _LevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelID");
                OnLevelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelID;
        partial void OnLevelIDChanging(Nullable<global::System.Int32> value);
        partial void OnLevelIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AreaID
        {
            get
            {
                return _AreaID;
            }
            set
            {
                OnAreaIDChanging(value);
                ReportPropertyChanging("AreaID");
                _AreaID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AreaID");
                OnAreaIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AreaID;
        partial void OnAreaIDChanging(Nullable<global::System.Int32> value);
        partial void OnAreaIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubjectID;
        partial void OnSubjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChildSubjectID
        {
            get
            {
                return _ChildSubjectID;
            }
            set
            {
                OnChildSubjectIDChanging(value);
                ReportPropertyChanging("ChildSubjectID");
                _ChildSubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChildSubjectID");
                OnChildSubjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ChildSubjectID;
        partial void OnChildSubjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnChildSubjectIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupIndex
        {
            get
            {
                return _GroupIndex;
            }
            set
            {
                OnGroupIndexChanging(value);
                ReportPropertyChanging("GroupIndex");
                _GroupIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupIndex");
                OnGroupIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupIndex;
        partial void OnGroupIndexChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIndexChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                if (_VersionId != value)
                {
                    OnVersionIdChanging(value);
                    ReportPropertyChanging("VersionId");
                    _VersionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VersionId");
                    OnVersionIdChanged();
                }
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocalAuthorityID
        {
            get
            {
                return _LocalAuthorityID;
            }
            set
            {
                OnLocalAuthorityIDChanging(value);
                ReportPropertyChanging("LocalAuthorityID");
                _LocalAuthorityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocalAuthorityID");
                OnLocalAuthorityIDChanged();
            }
        }
        private Nullable<global::System.Guid> _LocalAuthorityID;
        partial void OnLocalAuthorityIDChanging(Nullable<global::System.Guid> value);
        partial void OnLocalAuthorityIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UniqueID
        {
            get
            {
                return _UniqueID;
            }
            set
            {
                OnUniqueIDChanging(value);
                ReportPropertyChanging("UniqueID");
                _UniqueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueID");
                OnUniqueIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UniqueID;
        partial void OnUniqueIDChanging(Nullable<global::System.Guid> value);
        partial void OnUniqueIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementModificationQueuePolicyRequirement", "PolicyRequirement")]
        public PolicyRequirement PolicyRequirement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationQueuePolicyRequirement", "PolicyRequirement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationQueuePolicyRequirement", "PolicyRequirement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirement> PolicyRequirementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationQueuePolicyRequirement", "PolicyRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationQueuePolicyRequirement", "PolicyRequirement", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PolicyRequirementModificationAssignmentQueuePolicyRequirementModificationQueue", "PolicyRequirementModificationAssignmentQueue")]
        public EntityCollection<PolicyRequirementModificationAssignmentQueue> PolicyRequirementModificationAssignmentQueue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirementModificationAssignmentQueue>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueuePolicyRequirementModificationQueue", "PolicyRequirementModificationAssignmentQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirementModificationAssignmentQueue>("PolicyRequirements.DataEntityModels.PolicyRequirementModificationAssignmentQueuePolicyRequirementModificationQueue", "PolicyRequirementModificationAssignmentQueue", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementPublishingAdditionalInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementPublishingAdditionalInfo : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementPublishingAdditionalInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        public static PolicyRequirementPublishingAdditionalInfo CreatePolicyRequirementPublishingAdditionalInfo(global::System.Int32 id, global::System.Int32 versionId)
        {
            PolicyRequirementPublishingAdditionalInfo policyRequirementPublishingAdditionalInfo = new PolicyRequirementPublishingAdditionalInfo();
            policyRequirementPublishingAdditionalInfo.Id = id;
            policyRequirementPublishingAdditionalInfo.VersionId = versionId;
            return policyRequirementPublishingAdditionalInfo;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String PolicyRequirementDescription
        {
            get
            {
                return _PolicyRequirementDescription;
            }
            set
            {
                OnPolicyRequirementDescriptionChanging(value);
                ReportPropertyChanging("PolicyRequirementDescription");
                _PolicyRequirementDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyRequirementDescription");
                OnPolicyRequirementDescriptionChanged();
            }
        }
        private global::System.String _PolicyRequirementDescription;
        partial void OnPolicyRequirementDescriptionChanging(global::System.String value);
        partial void OnPolicyRequirementDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyRequirementId
        {
            get
            {
                return _PolicyRequirementId;
            }
            set
            {
                OnPolicyRequirementIdChanging(value);
                ReportPropertyChanging("PolicyRequirementId");
                _PolicyRequirementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyRequirementId");
                OnPolicyRequirementIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyRequirementId;
        partial void OnPolicyRequirementIdChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyRequirementIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActionId
        {
            get
            {
                return _ActionId;
            }
            set
            {
                OnActionIdChanging(value);
                ReportPropertyChanging("ActionId");
                _ActionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActionId");
                OnActionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ActionId;
        partial void OnActionIdChanging(Nullable<global::System.Int32> value);
        partial void OnActionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                if (_VersionId != value)
                {
                    OnVersionIdChanging(value);
                    ReportPropertyChanging("VersionId");
                    _VersionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VersionId");
                    OnVersionIdChanged();
                }
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementPublishingAdditionalInfo_PolicyRequirementPublishingAdditionalInfoAction1", "PolicyRequirementPublishingAdditionalInfoAction")]
        public PolicyRequirementPublishingAdditionalInfoAction PolicyRequirementPublishingAdditionalInfoAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementPublishingAdditionalInfoAction>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementPublishingAdditionalInfo_PolicyRequirementPublishingAdditionalInfoAction1", "PolicyRequirementPublishingAdditionalInfoAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementPublishingAdditionalInfoAction>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementPublishingAdditionalInfo_PolicyRequirementPublishingAdditionalInfoAction1", "PolicyRequirementPublishingAdditionalInfoAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirementPublishingAdditionalInfoAction> PolicyRequirementPublishingAdditionalInfoActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirementPublishingAdditionalInfoAction>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementPublishingAdditionalInfo_PolicyRequirementPublishingAdditionalInfoAction1", "PolicyRequirementPublishingAdditionalInfoAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirementPublishingAdditionalInfoAction>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementPublishingAdditionalInfo_PolicyRequirementPublishingAdditionalInfoAction1", "PolicyRequirementPublishingAdditionalInfoAction", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementPublishingAdditionalInfoAction")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementPublishingAdditionalInfoAction : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementPublishingAdditionalInfoAction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PolicyRequirementPublishingAdditionalInfoAction CreatePolicyRequirementPublishingAdditionalInfoAction(global::System.Int32 id, global::System.String description)
        {
            PolicyRequirementPublishingAdditionalInfoAction policyRequirementPublishingAdditionalInfoAction = new PolicyRequirementPublishingAdditionalInfoAction();
            policyRequirementPublishingAdditionalInfoAction.Id = id;
            policyRequirementPublishingAdditionalInfoAction.Description = description;
            return policyRequirementPublishingAdditionalInfoAction;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementPublishingAdditionalInfo_PolicyRequirementPublishingAdditionalInfoAction1", "PolicyRequirementPublishingAdditionalInfo")]
        public EntityCollection<PolicyRequirementPublishingAdditionalInfo> PolicyRequirementPublishingAdditionalInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirementPublishingAdditionalInfo>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementPublishingAdditionalInfo_PolicyRequirementPublishingAdditionalInfoAction1", "PolicyRequirementPublishingAdditionalInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirementPublishingAdditionalInfo>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementPublishingAdditionalInfo_PolicyRequirementPublishingAdditionalInfoAction1", "PolicyRequirementPublishingAdditionalInfo", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementPublishingControl")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementPublishingControl : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementPublishingControl object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static PolicyRequirementPublishingControl CreatePolicyRequirementPublishingControl(global::System.Int32 id)
        {
            PolicyRequirementPublishingControl policyRequirementPublishingControl = new PolicyRequirementPublishingControl();
            policyRequirementPublishingControl.Id = id;
            return policyRequirementPublishingControl;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPublished
        {
            get
            {
                return _IsPublished;
            }
            set
            {
                OnIsPublishedChanging(value);
                ReportPropertyChanging("IsPublished");
                _IsPublished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublished");
                OnIsPublishedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPublished;
        partial void OnIsPublishedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPublishedChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String PublishedBy
        {
            get
            {
                return _PublishedBy;
            }
            set
            {
                OnPublishedByChanging(value);
                ReportPropertyChanging("PublishedBy");
                _PublishedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PublishedBy");
                OnPublishedByChanged();
            }
        }
        private global::System.String _PublishedBy;
        partial void OnPublishedByChanging(global::System.String value);
        partial void OnPublishedByChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String PublishInfo
        {
            get
            {
                return _PublishInfo;
            }
            set
            {
                OnPublishInfoChanging(value);
                ReportPropertyChanging("PublishInfo");
                _PublishInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PublishInfo");
                OnPublishInfoChanged();
            }
        }
        private global::System.String _PublishInfo;
        partial void OnPublishInfoChanging(global::System.String value);
        partial void OnPublishInfoChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementPublishQueue")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementPublishQueue : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementPublishQueue object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="publicationId">Initial value of the PublicationId property.</param>
        public static PolicyRequirementPublishQueue CreatePolicyRequirementPublishQueue(global::System.Int32 id, global::System.Int32 publicationId)
        {
            PolicyRequirementPublishQueue policyRequirementPublishQueue = new PolicyRequirementPublishQueue();
            policyRequirementPublishQueue.ID = id;
            policyRequirementPublishQueue.PublicationId = publicationId;
            return policyRequirementPublishQueue;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanPublish
        {
            get
            {
                return _CanPublish;
            }
            set
            {
                OnCanPublishChanging(value);
                ReportPropertyChanging("CanPublish");
                _CanPublish = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanPublish");
                OnCanPublishChanged();
            }
        }
        private Nullable<global::System.Boolean> _CanPublish;
        partial void OnCanPublishChanging(Nullable<global::System.Boolean> value);
        partial void OnCanPublishChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                OnVersionIdChanging(value);
                ReportPropertyChanging("VersionId");
                _VersionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionId");
                OnVersionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionId;
        partial void OnVersionIdChanging(Nullable<global::System.Int32> value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 PublicationId
        {
            get
            {
                return _PublicationId;
            }
            set
            {
                if (_PublicationId != value)
                {
                    OnPublicationIdChanging(value);
                    ReportPropertyChanging("PublicationId");
                    _PublicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PublicationId");
                    OnPublicationIdChanged();
                }
            }
        }
        private global::System.Int32 _PublicationId;
        partial void OnPublicationIdChanging(global::System.Int32 value);
        partial void OnPublicationIdChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementSource")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementSource : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementSource object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PolicyRequirementSource CreatePolicyRequirementSource(global::System.Int32 id, global::System.String description)
        {
            PolicyRequirementSource policyRequirementSource = new PolicyRequirementSource();
            policyRequirementSource.ID = id;
            policyRequirementSource.Description = description;
            return policyRequirementSource;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String StorageLocation
        {
            get
            {
                return _StorageLocation;
            }
            set
            {
                OnStorageLocationChanging(value);
                ReportPropertyChanging("StorageLocation");
                _StorageLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StorageLocation");
                OnStorageLocationChanged();
            }
        }
        private global::System.String _StorageLocation;
        partial void OnStorageLocationChanging(global::System.String value);
        partial void OnStorageLocationChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirementAssignedSource_PolicyRequirementSource", "PolicyRequirementAssignedSource")]
        public EntityCollection<PolicyRequirementAssignedSource> PolicyRequirementAssignedSources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirementAssignedSource>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedSource_PolicyRequirementSource", "PolicyRequirementAssignedSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirementAssignedSource>("PolicyRequirements.DataEntityModels.FK_PolicyRequirementAssignedSource_PolicyRequirementSource", "PolicyRequirementAssignedSource", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PolicyRequirementSubject")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PolicyRequirementSubject : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PolicyRequirementSubject object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PolicyRequirementSubject CreatePolicyRequirementSubject(global::System.Int32 id, global::System.Int32 versionId, global::System.String description)
        {
            PolicyRequirementSubject policyRequirementSubject = new PolicyRequirementSubject();
            policyRequirementSubject.ID = id;
            policyRequirementSubject.VersionId = versionId;
            policyRequirementSubject.Description = description;
            return policyRequirementSubject;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                if (_VersionId != value)
                {
                    OnVersionIdChanging(value);
                    ReportPropertyChanging("VersionId");
                    _VersionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VersionId");
                    OnVersionIdChanged();
                }
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FetchByDefault
        {
            get
            {
                return _FetchByDefault;
            }
            set
            {
                OnFetchByDefaultChanging(value);
                ReportPropertyChanging("FetchByDefault");
                _FetchByDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FetchByDefault");
                OnFetchByDefaultChanged();
            }
        }
        private Nullable<global::System.Int32> _FetchByDefault;
        partial void OnFetchByDefaultChanging(Nullable<global::System.Int32> value);
        partial void OnFetchByDefaultChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTownSpecific
        {
            get
            {
                return _IsTownSpecific;
            }
            set
            {
                OnIsTownSpecificChanging(value);
                ReportPropertyChanging("IsTownSpecific");
                _IsTownSpecific = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTownSpecific");
                OnIsTownSpecificChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTownSpecific;
        partial void OnIsTownSpecificChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTownSpecificChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "FK_PolicyRequirement_PolicyRequirementSubject", "PolicyRequirement")]
        public EntityCollection<PolicyRequirement> PolicyRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementSubject", "PolicyRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyRequirement>("PolicyRequirements.DataEntityModels.FK_PolicyRequirement_PolicyRequirementSubject", "PolicyRequirement", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PublicSpaceManagementTheme")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PublicSpaceManagementTheme : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PublicSpaceManagementTheme object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static PublicSpaceManagementTheme CreatePublicSpaceManagementTheme(global::System.Int32 id)
        {
            PublicSpaceManagementTheme publicSpaceManagementTheme = new PublicSpaceManagementTheme();
            publicSpaceManagementTheme.Id = id;
            return publicSpaceManagementTheme;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Abbreviation
        {
            get
            {
                return _Abbreviation;
            }
            set
            {
                OnAbbreviationChanging(value);
                ReportPropertyChanging("Abbreviation");
                _Abbreviation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Abbreviation");
                OnAbbreviationChanged();
            }
        }
        private global::System.String _Abbreviation;
        partial void OnAbbreviationChanging(global::System.String value);
        partial void OnAbbreviationChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PublicSpaceManagementThemeReferencePublicSpaceManagementTheme", "PublicSpaceManagementThemeReference")]
        public EntityCollection<PublicSpaceManagementThemeReference> PublicSpaceManagementThemeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublicSpaceManagementThemeReference>("PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReferencePublicSpaceManagementTheme", "PublicSpaceManagementThemeReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublicSpaceManagementThemeReference>("PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReferencePublicSpaceManagementTheme", "PublicSpaceManagementThemeReference", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "PublicSpaceManagementThemeReference")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PublicSpaceManagementThemeReference : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PublicSpaceManagementThemeReference object.
        /// </summary>
        /// <param name="themeId">Initial value of the ThemeId property.</param>
        /// <param name="policyRequirementId">Initial value of the PolicyRequirementId property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        public static PublicSpaceManagementThemeReference CreatePublicSpaceManagementThemeReference(global::System.Int32 themeId, global::System.Int32 policyRequirementId, global::System.Int32 versionId)
        {
            PublicSpaceManagementThemeReference publicSpaceManagementThemeReference = new PublicSpaceManagementThemeReference();
            publicSpaceManagementThemeReference.ThemeId = themeId;
            publicSpaceManagementThemeReference.PolicyRequirementId = policyRequirementId;
            publicSpaceManagementThemeReference.VersionId = versionId;
            return publicSpaceManagementThemeReference;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThemeId
        {
            get
            {
                return _ThemeId;
            }
            set
            {
                if (_ThemeId != value)
                {
                    OnThemeIdChanging(value);
                    ReportPropertyChanging("ThemeId");
                    _ThemeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThemeId");
                    OnThemeIdChanged();
                }
            }
        }
        private global::System.Int32 _ThemeId;
        partial void OnThemeIdChanging(global::System.Int32 value);
        partial void OnThemeIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyRequirementId
        {
            get
            {
                return _PolicyRequirementId;
            }
            set
            {
                if (_PolicyRequirementId != value)
                {
                    OnPolicyRequirementIdChanging(value);
                    ReportPropertyChanging("PolicyRequirementId");
                    _PolicyRequirementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyRequirementId");
                    OnPolicyRequirementIdChanged();
                }
            }
        }
        private global::System.Int32 _PolicyRequirementId;
        partial void OnPolicyRequirementIdChanging(global::System.Int32 value);
        partial void OnPolicyRequirementIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                if (_VersionId != value)
                {
                    OnVersionIdChanging(value);
                    ReportPropertyChanging("VersionId");
                    _VersionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VersionId");
                    OnVersionIdChanged();
                }
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PublicSpaceManagementThemeReferencePublicSpaceManagementTheme", "PublicSpaceManagementTheme")]
        public PublicSpaceManagementTheme PublicSpaceManagementThemes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublicSpaceManagementTheme>("PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReferencePublicSpaceManagementTheme", "PublicSpaceManagementTheme").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublicSpaceManagementTheme>("PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReferencePublicSpaceManagementTheme", "PublicSpaceManagementTheme").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PublicSpaceManagementTheme> PublicSpaceManagementThemesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublicSpaceManagementTheme>("PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReferencePublicSpaceManagementTheme", "PublicSpaceManagementTheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PublicSpaceManagementTheme>("PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReferencePublicSpaceManagementTheme", "PublicSpaceManagementTheme", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PolicyRequirements.DataEntityModels", "PublicSpaceManagementThemeReferencePolicyRequirement", "PolicyRequirement")]
        public PolicyRequirement PolicyRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReferencePolicyRequirement", "PolicyRequirement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReferencePolicyRequirement", "PolicyRequirement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyRequirement> PolicyRequirementsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReferencePolicyRequirement", "PolicyRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyRequirement>("PolicyRequirements.DataEntityModels.PublicSpaceManagementThemeReferencePolicyRequirement", "PolicyRequirement", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "TT_SYS_GENID")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class TT_SYS_GENID : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new TT_SYS_GENID object.
        /// </summary>
        /// <param name="tT_TABLENAME">Initial value of the TT_TABLENAME property.</param>
        public static TT_SYS_GENID CreateTT_SYS_GENID(global::System.String tT_TABLENAME)
        {
            TT_SYS_GENID tT_SYS_GENID = new TT_SYS_GENID();
            tT_SYS_GENID.TT_TABLENAME = tT_TABLENAME;
            return tT_SYS_GENID;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String TT_TABLENAME
        {
            get
            {
                return _TT_TABLENAME;
            }
            set
            {
                if (_TT_TABLENAME != value)
                {
                    OnTT_TABLENAMEChanging(value);
                    ReportPropertyChanging("TT_TABLENAME");
                    _TT_TABLENAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TT_TABLENAME");
                    OnTT_TABLENAMEChanged();
                }
            }
        }
        private global::System.String _TT_TABLENAME;
        partial void OnTT_TABLENAMEChanging(global::System.String value);
        partial void OnTT_TABLENAMEChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TT_LASTGEN_ID
        {
            get
            {
                return _TT_LASTGEN_ID;
            }
            set
            {
                OnTT_LASTGEN_IDChanging(value);
                ReportPropertyChanging("TT_LASTGEN_ID");
                _TT_LASTGEN_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TT_LASTGEN_ID");
                OnTT_LASTGEN_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _TT_LASTGEN_ID;
        partial void OnTT_LASTGEN_IDChanging(Nullable<global::System.Int32> value);
        partial void OnTT_LASTGEN_IDChanged();

        #endregion

    }

    #endregion

    #region ComplexTypes

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "dali_GetKeywords_Result")]
    [DataContractAttribute(IsReference = true)]
    [Serializable()]
    public partial class dali_GetKeywords_Result : ComplexObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new dali_GetKeywords_Result object.
        /// </summary>
        /// <param name="description">Initial value of the Description property.</param>
        public static dali_GetKeywords_Result Createdali_GetKeywords_Result(global::System.String description)
        {
            dali_GetKeywords_Result dali_GetKeywords_Result = new dali_GetKeywords_Result();
            dali_GetKeywords_Result.Description = description;
            return dali_GetKeywords_Result;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "dali_GetPolicyRequirementPaths_Result")]
    [DataContractAttribute(IsReference = true)]
    [Serializable()]
    public partial class dali_GetPolicyRequirementPaths_Result : ComplexObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new dali_GetPolicyRequirementPaths_Result object.
        /// </summary>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="rootPath">Initial value of the RootPath property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="semiPath">Initial value of the SemiPath property.</param>
        /// <param name="chapter">Initial value of the Chapter property.</param>
        /// <param name="fullChapterName">Initial value of the FullChapterName property.</param>
        /// <param name="chapterId">Initial value of the ChapterId property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        public static dali_GetPolicyRequirementPaths_Result Createdali_GetPolicyRequirementPaths_Result(global::System.String number, global::System.String rootPath, global::System.String path, global::System.String semiPath, global::System.String chapter, global::System.String fullChapterName, global::System.Int32 chapterId, global::System.Int32 versionId)
        {
            dali_GetPolicyRequirementPaths_Result dali_GetPolicyRequirementPaths_Result = new dali_GetPolicyRequirementPaths_Result();
            dali_GetPolicyRequirementPaths_Result.Number = number;
            dali_GetPolicyRequirementPaths_Result.RootPath = rootPath;
            dali_GetPolicyRequirementPaths_Result.Path = path;
            dali_GetPolicyRequirementPaths_Result.SemiPath = semiPath;
            dali_GetPolicyRequirementPaths_Result.Chapter = chapter;
            dali_GetPolicyRequirementPaths_Result.FullChapterName = fullChapterName;
            dali_GetPolicyRequirementPaths_Result.ChapterId = chapterId;
            dali_GetPolicyRequirementPaths_Result.VersionId = versionId;
            return dali_GetPolicyRequirementPaths_Result;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupIndex
        {
            get
            {
                return _GroupIndex;
            }
            set
            {
                OnGroupIndexChanging(value);
                ReportPropertyChanging("GroupIndex");
                _GroupIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupIndex");
                OnGroupIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupIndex;
        partial void OnGroupIndexChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIndexChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String RootPath
        {
            get
            {
                return _RootPath;
            }
            set
            {
                OnRootPathChanging(value);
                ReportPropertyChanging("RootPath");
                _RootPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RootPath");
                OnRootPathChanged();
            }
        }
        private global::System.String _RootPath;
        partial void OnRootPathChanging(global::System.String value);
        partial void OnRootPathChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String SemiPath
        {
            get
            {
                return _SemiPath;
            }
            set
            {
                OnSemiPathChanging(value);
                ReportPropertyChanging("SemiPath");
                _SemiPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SemiPath");
                OnSemiPathChanged();
            }
        }
        private global::System.String _SemiPath;
        partial void OnSemiPathChanging(global::System.String value);
        partial void OnSemiPathChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Chapter
        {
            get
            {
                return _Chapter;
            }
            set
            {
                OnChapterChanging(value);
                ReportPropertyChanging("Chapter");
                _Chapter = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Chapter");
                OnChapterChanged();
            }
        }
        private global::System.String _Chapter;
        partial void OnChapterChanging(global::System.String value);
        partial void OnChapterChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.String _Level;
        partial void OnLevelChanging(global::System.String value);
        partial void OnLevelChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private global::System.String _Area;
        partial void OnAreaChanging(global::System.String value);
        partial void OnAreaChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String FullChapterName
        {
            get
            {
                return _FullChapterName;
            }
            set
            {
                OnFullChapterNameChanging(value);
                ReportPropertyChanging("FullChapterName");
                _FullChapterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullChapterName");
                OnFullChapterNameChanged();
            }
        }
        private global::System.String _FullChapterName;
        partial void OnFullChapterNameChanging(global::System.String value);
        partial void OnFullChapterNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChapterId
        {
            get
            {
                return _ChapterId;
            }
            set
            {
                OnChapterIdChanging(value);
                ReportPropertyChanging("ChapterId");
                _ChapterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChapterId");
                OnChapterIdChanged();
            }
        }
        private global::System.Int32 _ChapterId;
        partial void OnChapterIdChanging(global::System.Int32 value);
        partial void OnChapterIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelId
        {
            get
            {
                return _LevelId;
            }
            set
            {
                OnLevelIdChanging(value);
                ReportPropertyChanging("LevelId");
                _LevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelId");
                OnLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelId;
        partial void OnLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnLevelIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                OnAreaIdChanging(value);
                ReportPropertyChanging("AreaId");
                _AreaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AreaId");
                OnAreaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AreaId;
        partial void OnAreaIdChanging(Nullable<global::System.Int32> value);
        partial void OnAreaIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubjectId
        {
            get
            {
                return _SubjectId;
            }
            set
            {
                OnSubjectIdChanging(value);
                ReportPropertyChanging("SubjectId");
                _SubjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectId");
                OnSubjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubjectId;
        partial void OnSubjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                OnVersionIdChanging(value);
                ReportPropertyChanging("VersionId");
                _VersionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionId");
                OnVersionIdChanged();
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "dali_GetPolicyRequirementQueuePaths_Result")]
    [DataContractAttribute(IsReference = true)]
    [Serializable()]
    public partial class dali_GetPolicyRequirementQueuePaths_Result : ComplexObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new dali_GetPolicyRequirementQueuePaths_Result object.
        /// </summary>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="rootPath">Initial value of the RootPath property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="semiPath">Initial value of the SemiPath property.</param>
        /// <param name="chapter">Initial value of the Chapter property.</param>
        /// <param name="fullChapterName">Initial value of the FullChapterName property.</param>
        /// <param name="chapterId">Initial value of the ChapterId property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        public static dali_GetPolicyRequirementQueuePaths_Result Createdali_GetPolicyRequirementQueuePaths_Result(global::System.String number, global::System.String rootPath, global::System.String path, global::System.String semiPath, global::System.String chapter, global::System.String fullChapterName, global::System.Int32 chapterId, global::System.Int32 versionId)
        {
            dali_GetPolicyRequirementQueuePaths_Result dali_GetPolicyRequirementQueuePaths_Result = new dali_GetPolicyRequirementQueuePaths_Result();
            dali_GetPolicyRequirementQueuePaths_Result.Number = number;
            dali_GetPolicyRequirementQueuePaths_Result.RootPath = rootPath;
            dali_GetPolicyRequirementQueuePaths_Result.Path = path;
            dali_GetPolicyRequirementQueuePaths_Result.SemiPath = semiPath;
            dali_GetPolicyRequirementQueuePaths_Result.Chapter = chapter;
            dali_GetPolicyRequirementQueuePaths_Result.FullChapterName = fullChapterName;
            dali_GetPolicyRequirementQueuePaths_Result.ChapterId = chapterId;
            dali_GetPolicyRequirementQueuePaths_Result.VersionId = versionId;
            return dali_GetPolicyRequirementQueuePaths_Result;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupIndex
        {
            get
            {
                return _GroupIndex;
            }
            set
            {
                OnGroupIndexChanging(value);
                ReportPropertyChanging("GroupIndex");
                _GroupIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupIndex");
                OnGroupIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupIndex;
        partial void OnGroupIndexChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIndexChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String RootPath
        {
            get
            {
                return _RootPath;
            }
            set
            {
                OnRootPathChanging(value);
                ReportPropertyChanging("RootPath");
                _RootPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RootPath");
                OnRootPathChanged();
            }
        }
        private global::System.String _RootPath;
        partial void OnRootPathChanging(global::System.String value);
        partial void OnRootPathChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String SemiPath
        {
            get
            {
                return _SemiPath;
            }
            set
            {
                OnSemiPathChanging(value);
                ReportPropertyChanging("SemiPath");
                _SemiPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SemiPath");
                OnSemiPathChanged();
            }
        }
        private global::System.String _SemiPath;
        partial void OnSemiPathChanging(global::System.String value);
        partial void OnSemiPathChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Chapter
        {
            get
            {
                return _Chapter;
            }
            set
            {
                OnChapterChanging(value);
                ReportPropertyChanging("Chapter");
                _Chapter = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Chapter");
                OnChapterChanged();
            }
        }
        private global::System.String _Chapter;
        partial void OnChapterChanging(global::System.String value);
        partial void OnChapterChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.String _Level;
        partial void OnLevelChanging(global::System.String value);
        partial void OnLevelChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private global::System.String _Area;
        partial void OnAreaChanging(global::System.String value);
        partial void OnAreaChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String FullChapterName
        {
            get
            {
                return _FullChapterName;
            }
            set
            {
                OnFullChapterNameChanging(value);
                ReportPropertyChanging("FullChapterName");
                _FullChapterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullChapterName");
                OnFullChapterNameChanged();
            }
        }
        private global::System.String _FullChapterName;
        partial void OnFullChapterNameChanging(global::System.String value);
        partial void OnFullChapterNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChapterId
        {
            get
            {
                return _ChapterId;
            }
            set
            {
                OnChapterIdChanging(value);
                ReportPropertyChanging("ChapterId");
                _ChapterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChapterId");
                OnChapterIdChanged();
            }
        }
        private global::System.Int32 _ChapterId;
        partial void OnChapterIdChanging(global::System.Int32 value);
        partial void OnChapterIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelId
        {
            get
            {
                return _LevelId;
            }
            set
            {
                OnLevelIdChanging(value);
                ReportPropertyChanging("LevelId");
                _LevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelId");
                OnLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelId;
        partial void OnLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnLevelIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                OnAreaIdChanging(value);
                ReportPropertyChanging("AreaId");
                _AreaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AreaId");
                OnAreaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AreaId;
        partial void OnAreaIdChanging(Nullable<global::System.Int32> value);
        partial void OnAreaIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubjectId
        {
            get
            {
                return _SubjectId;
            }
            set
            {
                OnSubjectIdChanging(value);
                ReportPropertyChanging("SubjectId");
                _SubjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectId");
                OnSubjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubjectId;
        partial void OnSubjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                OnVersionIdChanging(value);
                ReportPropertyChanging("VersionId");
                _VersionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionId");
                OnVersionIdChanged();
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "dali_GetPolicyRequirements_Result")]
    [DataContractAttribute(IsReference = true)]
    [Serializable()]
    public partial class dali_GetPolicyRequirements_Result : ComplexObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new dali_GetPolicyRequirements_Result object.
        /// </summary>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="chapter">Initial value of the Chapter property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="fullChapterName">Initial value of the FullChapterName property.</param>
        /// <param name="chapterId">Initial value of the ChapterId property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        public static dali_GetPolicyRequirements_Result Createdali_GetPolicyRequirements_Result(global::System.String number, global::System.String chapter, global::System.Int32 id, global::System.String path, global::System.String fullChapterName, global::System.Int32 chapterId, global::System.Int32 versionId)
        {
            dali_GetPolicyRequirements_Result dali_GetPolicyRequirements_Result = new dali_GetPolicyRequirements_Result();
            dali_GetPolicyRequirements_Result.Number = number;
            dali_GetPolicyRequirements_Result.Chapter = chapter;
            dali_GetPolicyRequirements_Result.ID = id;
            dali_GetPolicyRequirements_Result.Path = path;
            dali_GetPolicyRequirements_Result.FullChapterName = fullChapterName;
            dali_GetPolicyRequirements_Result.ChapterId = chapterId;
            dali_GetPolicyRequirements_Result.VersionId = versionId;
            return dali_GetPolicyRequirements_Result;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupIndex
        {
            get
            {
                return _GroupIndex;
            }
            set
            {
                OnGroupIndexChanging(value);
                ReportPropertyChanging("GroupIndex");
                _GroupIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupIndex");
                OnGroupIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupIndex;
        partial void OnGroupIndexChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIndexChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Chapter
        {
            get
            {
                return _Chapter;
            }
            set
            {
                OnChapterChanging(value);
                ReportPropertyChanging("Chapter");
                _Chapter = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Chapter");
                OnChapterChanged();
            }
        }
        private global::System.String _Chapter;
        partial void OnChapterChanging(global::System.String value);
        partial void OnChapterChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.String _Level;
        partial void OnLevelChanging(global::System.String value);
        partial void OnLevelChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private global::System.String _Area;
        partial void OnAreaChanging(global::System.String value);
        partial void OnAreaChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String ChildSubject
        {
            get
            {
                return _ChildSubject;
            }
            set
            {
                OnChildSubjectChanging(value);
                ReportPropertyChanging("ChildSubject");
                _ChildSubject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChildSubject");
                OnChildSubjectChanged();
            }
        }
        private global::System.String _ChildSubject;
        partial void OnChildSubjectChanging(global::System.String value);
        partial void OnChildSubjectChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String FullChapterName
        {
            get
            {
                return _FullChapterName;
            }
            set
            {
                OnFullChapterNameChanging(value);
                ReportPropertyChanging("FullChapterName");
                _FullChapterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullChapterName");
                OnFullChapterNameChanged();
            }
        }
        private global::System.String _FullChapterName;
        partial void OnFullChapterNameChanging(global::System.String value);
        partial void OnFullChapterNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChapterId
        {
            get
            {
                return _ChapterId;
            }
            set
            {
                OnChapterIdChanging(value);
                ReportPropertyChanging("ChapterId");
                _ChapterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChapterId");
                OnChapterIdChanged();
            }
        }
        private global::System.Int32 _ChapterId;
        partial void OnChapterIdChanging(global::System.Int32 value);
        partial void OnChapterIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelId
        {
            get
            {
                return _LevelId;
            }
            set
            {
                OnLevelIdChanging(value);
                ReportPropertyChanging("LevelId");
                _LevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelId");
                OnLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelId;
        partial void OnLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnLevelIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                OnAreaIdChanging(value);
                ReportPropertyChanging("AreaId");
                _AreaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AreaId");
                OnAreaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AreaId;
        partial void OnAreaIdChanging(Nullable<global::System.Int32> value);
        partial void OnAreaIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubjectId
        {
            get
            {
                return _SubjectId;
            }
            set
            {
                OnSubjectIdChanging(value);
                ReportPropertyChanging("SubjectId");
                _SubjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectId");
                OnSubjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubjectId;
        partial void OnSubjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChildSubjectId
        {
            get
            {
                return _ChildSubjectId;
            }
            set
            {
                OnChildSubjectIdChanging(value);
                ReportPropertyChanging("ChildSubjectId");
                _ChildSubjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChildSubjectId");
                OnChildSubjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ChildSubjectId;
        partial void OnChildSubjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnChildSubjectIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Int32> value);
        partial void OnLocationIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Int32> value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                OnVersionIdChanging(value);
                ReportPropertyChanging("VersionId");
                _VersionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionId");
                OnVersionIdChanged();
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderIndex
        {
            get
            {
                return _OrderIndex;
            }
            set
            {
                OnOrderIndexChanging(value);
                ReportPropertyChanging("OrderIndex");
                _OrderIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderIndex");
                OnOrderIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderIndex;
        partial void OnOrderIndexChanging(Nullable<global::System.Int32> value);
        partial void OnOrderIndexChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName = "PolicyRequirements.DataEntityModels", Name = "GetPlanOfRequirementsPath_Result")]
    [DataContractAttribute(IsReference = true)]
    [Serializable()]
    public partial class GetPlanOfRequirementsPath_Result : ComplexObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new GetPlanOfRequirementsPath_Result object.
        /// </summary>
        /// <param name="poRID">Initial value of the PoRID property.</param>
        /// <param name="chapterId">Initial value of the ChapterId property.</param>
        /// <param name="versionId">Initial value of the VersionId property.</param>
        public static GetPlanOfRequirementsPath_Result CreateGetPlanOfRequirementsPath_Result(global::System.Int32 poRID, global::System.Int32 chapterId, global::System.Int32 versionId)
        {
            GetPlanOfRequirementsPath_Result getPlanOfRequirementsPath_Result = new GetPlanOfRequirementsPath_Result();
            getPlanOfRequirementsPath_Result.PoRID = poRID;
            getPlanOfRequirementsPath_Result.ChapterId = chapterId;
            getPlanOfRequirementsPath_Result.VersionId = versionId;
            return getPlanOfRequirementsPath_Result;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 PoRID
        {
            get
            {
                return _PoRID;
            }
            set
            {
                OnPoRIDChanging(value);
                ReportPropertyChanging("PoRID");
                _PoRID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PoRID");
                OnPoRIDChanged();
            }
        }
        private global::System.Int32 _PoRID;
        partial void OnPoRIDChanging(global::System.Int32 value);
        partial void OnPoRIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupIndex
        {
            get
            {
                return _GroupIndex;
            }
            set
            {
                OnGroupIndexChanging(value);
                ReportPropertyChanging("GroupIndex");
                _GroupIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupIndex");
                OnGroupIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupIndex;
        partial void OnGroupIndexChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIndexChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String RootPath
        {
            get
            {
                return _RootPath;
            }
            set
            {
                OnRootPathChanging(value);
                ReportPropertyChanging("RootPath");
                _RootPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RootPath");
                OnRootPathChanged();
            }
        }
        private global::System.String _RootPath;
        partial void OnRootPathChanging(global::System.String value);
        partial void OnRootPathChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String SemiPath
        {
            get
            {
                return _SemiPath;
            }
            set
            {
                OnSemiPathChanging(value);
                ReportPropertyChanging("SemiPath");
                _SemiPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SemiPath");
                OnSemiPathChanged();
            }
        }
        private global::System.String _SemiPath;
        partial void OnSemiPathChanging(global::System.String value);
        partial void OnSemiPathChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Chapter
        {
            get
            {
                return _Chapter;
            }
            set
            {
                OnChapterChanging(value);
                ReportPropertyChanging("Chapter");
                _Chapter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Chapter");
                OnChapterChanged();
            }
        }
        private global::System.String _Chapter;
        partial void OnChapterChanging(global::System.String value);
        partial void OnChapterChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.String _Level;
        partial void OnLevelChanging(global::System.String value);
        partial void OnLevelChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private global::System.String _Area;
        partial void OnAreaChanging(global::System.String value);
        partial void OnAreaChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String FullChapterName
        {
            get
            {
                return _FullChapterName;
            }
            set
            {
                OnFullChapterNameChanging(value);
                ReportPropertyChanging("FullChapterName");
                _FullChapterName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullChapterName");
                OnFullChapterNameChanged();
            }
        }
        private global::System.String _FullChapterName;
        partial void OnFullChapterNameChanging(global::System.String value);
        partial void OnFullChapterNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChapterId
        {
            get
            {
                return _ChapterId;
            }
            set
            {
                OnChapterIdChanging(value);
                ReportPropertyChanging("ChapterId");
                _ChapterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChapterId");
                OnChapterIdChanged();
            }
        }
        private global::System.Int32 _ChapterId;
        partial void OnChapterIdChanging(global::System.Int32 value);
        partial void OnChapterIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelId
        {
            get
            {
                return _LevelId;
            }
            set
            {
                OnLevelIdChanging(value);
                ReportPropertyChanging("LevelId");
                _LevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelId");
                OnLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelId;
        partial void OnLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnLevelIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                OnAreaIdChanging(value);
                ReportPropertyChanging("AreaId");
                _AreaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AreaId");
                OnAreaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AreaId;
        partial void OnAreaIdChanging(Nullable<global::System.Int32> value);
        partial void OnAreaIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubjectId
        {
            get
            {
                return _SubjectId;
            }
            set
            {
                OnSubjectIdChanging(value);
                ReportPropertyChanging("SubjectId");
                _SubjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectId");
                OnSubjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubjectId;
        partial void OnSubjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionId
        {
            get
            {
                return _VersionId;
            }
            set
            {
                OnVersionIdChanging(value);
                ReportPropertyChanging("VersionId");
                _VersionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionId");
                OnVersionIdChanged();
            }
        }
        private global::System.Int32 _VersionId;
        partial void OnVersionIdChanging(global::System.Int32 value);
        partial void OnVersionIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();

        #endregion

    }

    #endregion

}
